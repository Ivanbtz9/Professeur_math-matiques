%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: H:/Mes-cours-2nde-mis-a-jour/Cours/Chapitre-vecteurs/Exercices/Exercices-niveau-0/vecteurs-niveau-0.dvi
%%CreationDate: Sun Mar 23 19:12:23 2014
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR12 CMBX10 CMR10 CMMI10 CMEX10 CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ H:/Mes-cours-2nde-mis-a-jour/Cours/Chapitre-vecteurs/Exercices/Exercices-niveau-0/vecteurs-niveau-0.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2014.03.23:1912
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.17, 2013/07/08
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 713 2012-10-16 14:25:00Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.03, 2012/10/16
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { 
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get 32 ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ rightTrim psStringwidth } bind def

%/show { rightTrim psShow } bind def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 67 /C put
dup 112 /radical put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
A853F0B32C3E5AB84D5618B20A2368E6CCF24E6635AC36F5912FDE664856D62E
28396E049FB828C803F08478AD134076FC54DCBD62FD91C88AD7CE0DFB8B4EE3
402B214CA01AF48514A8B3821A16F8A4ED22E558AAD15F1A9AA7B142AD376564
5F34AECC218C38DE3195C8141F326B3AD41590A2A0877E06AFA5801943BDCE6A
7E0F9DC15CE0776D45F689B4DD1AEBE4964DDC2AC46917478628FC59AF3BBCD1
7A8F95E250B800B83BE09B90FB7E65F0254D87076E293E85D1F7782887188A55
8CB8938B2C8A58121D6A3C506868619D8EF520357E6E466745D8A75FD9D28040
186857880164F0631DA0E32CCFF9E9CC29FD7ECFB5D03A33328DF304A721F7C5
F6D1D5691C61FE5BE305AC926DC4A671292DAB16C17A30EF2CF56C75897B333A
E8E7462065D0FD48E4DC772FBA492C8D7398209D1D488144E2B3A96DA7796208
249B5EB41D10D2A4380B93853029BE68FCECC2403D2CA014B4A580427694D87D
E74FAA4480D3D9A62F8B2732D59ED65E2E87B338075453CFA447178C72FE5EBB
C2C18DE72921472D791B35E108E9CD5D452998000A3E92220E542E9CD50767C8
FEC8A0489082E9262E947876613152A3A0C3D9184E978045F820F8BAF7B028A0
7DD7503CCEE24B216584C9B447161D614CF4DF17A2873945FC274D1FD5346355
FCD69404727C2FBD2071C771155633D81F2E91CF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 32 /parenleftBigg put
dup 33 /parenrightBigg put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F20DF0D776F1361D25A06237063DD6B88E16DF
7BF2D7AA555ECE15F21A2610055B5D7714B14542D0D2BE8077C420241454891D
5C6CC07A21175F09676EFB5E3DD9CF7764E41B23EBB5DFA640E8A8565733043E
8FE009AD7323D2DE27BD59E6F4B3DBC99973925FF328C62A412BD229383C8649
E8CA29EDE317014D0569A45F535F4C36A17CAD8BA035997FCDE386CEF2C9068F
43F3EA4B6CFC6EC46E5340991622208DABCE10ADC683A4849634EF6ADB7813F5
51283C906FF0F294CB77F156616FA8CB77F1DED0A09FBA64644495428B7FC567
0304F0E2FDAF557EB8BD7C5F90DCD713DD08D5F199F9EEB0484BDDC5AD8D1DAC
628DD696F5C24EDD9E1AD2C41B93239D7A9C2B90F7D1EF74156EE11ECC07D186
1DA29ABA2BF2FAE3284FCC77ED2958E06261B3BC90C3960A64C8C151FDA1B0E1
E0028F6152C81D56C4AB934626762AA153DCA74CCF4AD6D740DB4FD150A54C88
5D6A347AAB92A1F80EED0669FFEEF1019208AAE5278780B5E6C1C308B76BB995
18DD13CAAC661BD97476198B330B943C267B1CA3F620E8BDA592B2B87168B8AE
E914EA49A45C9A1D51F1499B0E59FBD54142AFFED85660F66A55F9E1B941F2E1
BF96C1C257EAF5267F52C9310B8D43DDCF5004637AD0534C8480A8EDD359B744
7EEFDB849AB5D19C537EBB74E0FEE3F6DCFB98CFE17E8812DA7691BB986DB55B
94A055677E83107077A41D5844116EF418112A3A49EC0EC6413A5E8BEFF73E55
E8047B830A8061E71BF96577983C35EBF036D95C89744F9231FDEA58F8A5F02E
81C93E7D410D80DE04B9C4390396E979852EAEC1D621EF24DC00145836E3D32A
706B31B885306DD6E006D11DE91AAE34679532849681D5AC5B812D1767341EFA
03C82851A1E67A8D00720E287637A3DD79295335B5AE51010859886B809DE53A
D8A78B99891A2970E6F4BBAF0ABAEB8A8CE4E3C2B5464EFCDA24D4E7482298C2
EBBA490C28AF8385531E3287D5FAF5C1DF1A8D9156804B14D2F8D6E2BA4D0079
22C1411CFDC2B555CA738D9D5992143BF91DA226945E0B42CBEB320FF5884A15
F9A332A0386F58D8A19D1A938CF107485DB3EEC18996036E5518286773178142
7ABE727BB2848EB9B7F6631DC5F77CB603981566DA96669F835D39F92E821AF5
30BB59A2242B268A92CD471426CF20FB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 97 /a put
dup 98 /b put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A90B8A9EE5C613CDB822F07B
115D4C174FB7945535F2F9C2875C9675143B8D98DEFD3898170FBCB19B4C29CE
1E6883E0F68B5D42751BD7AD09E3EB745F0A6338BA2148B769B5E1EB21109414
C1615EC1A1FEAD5831938F74E26E1F6BF51136E5C76F823D29D35078412923DB
B3A32176ED7935058ED16528D28E50E37BBEB1D1554503645DD681BD9CBEC596
5E246EA09BF28E98FB55C1E009C35D0DE1F77393EC792463AD99F06EB05CC098
26600D42045A75CCED6ABF5FBA7CFC21560FCFE13CD0B7F53872A09449E7A748
4A5015741939054CF994DDED17AAEB074E76FD2DD48374C2B47B17CECC15A13E
3E24ACEFB8A3BE7B6CD98585D1FEDC7BDC64D393EE6FA025BCB36A327A1EFFFD
BB4759AAA590C25436864EA37AB1A197182D3535937C89B8A9000FE6F053643F
870177753BC051BBBF440365345B2D5108A8D3648F4147E7F4274047AB2E52C7
7FAD42B0D5F7F40D68967064B7AB5954949C9687A7CBBCA6F6C4DF0C65D0A406
A5925D3F4B9CC4B4DF2219BDD664E29F8A2474910D9224D6BC79EA3A1963B9A1
14F76DC980545C6C050300F84AA2345B133EC5A11C16DC381CF7690AF47B5CC1
711F694F3D84C84669D3A9920AC6FFAF59D9A36983494487FDA93043EF673AA1
1C42476E4C2AC1DAE364DE4B67EFD50EF61CCD2E8429E28F863EDE31E97ADF14
7CE3D30CCEF4D9D6FB7CFF029BF6F9AC7040A5DFB0109EC2756879425B6E9CCF
0EE6F959FD51C48B1D7975703803C160A7952192B46F543082FCF9BEC3B84D17
13DEFB1B8C93C8595295709CDD4BFC2957C399463E4EC7EA99B4C4D4D72059EB
DEEA14F6E089B391297D3D915FF2076B72C836DB15170A0986384D0D0C934558
748BC1CBAC7479F5013237167E7046EC749C870CCB9F497307F4E1A157382966
0C8F1EB10C80540B4147F63BE844BB0DCBE9272C627FA8AB088039D6ADA02819
7E60E623F22EBFE53AE905FEA1F58F808988CBA92A17C763FDD0E93DFA9A10D2
C1022D9BD2D165D71AC24447F4A9DCFDCFFCB2E49F5DEDBD729780204BA2064D
B1DB30FCC75CBD46154C73B6134080E10C10F32A13AAB5E1326606F4DBBA7D87
6834498972D0B437FED47A52A4A494A719E78DA767665008C4F7581DF1C102AF
7B5740DCAFD71907AE438F9FC460086777C5954CECD52F644C067DA1BB6E17F7
4E7014AA80339EA72AFCFAD9A3BA07D5FA854FC4CCE4FDF6DAC1D64FDCB3DCEC
3C766E2028032B00C406BF5B05D764CE13324EAFA1A29E9A6CE54417C111318E
4E366AD399C6CAE2872699372A683447A996E295EE77E8772CD0066CEC3C3132
44CA2E78F2D8CEA06A4946B9AF18E8CF3D83362A76EDD34218A561C3DE29994E
B5209D1F65D27E63C0C048B97EBCE3CEAA217EB0A19091350DCF2D72943F3EAE
34A63CCAE8BD05D133D979079E0A43AA445A8A05BE9EA6F81201E4F6779850FE
AE0498C3454FF496EF1D9DEA1AF8EE1A19CE7671287E19AD7311688287377946
30027D6CAF2CECED904BC16395A37832092B9B4E0D45E3EEA2039AC4ED9E47E5
7C706A40F0BCD6C390E520EFA6F4087613C108622EEBAE5A57E139E0F3295FD7
1DFE343642DD2F7056567CBF5919637EBEC869ADE3C96BC5F4820DE25843254A
346B44B8F3645CBE6660084C4F217A15A3FCB03BA05DEEFB2F92102DBA793331
90D3F6E05602EB15C659CE595107853CE3E20448A6907CB5AF83C2910087EBA5
4F31ED4C14B6E22BA1E36794E7E906115D35E20FC6C3DC2F327C27F112DEA21B
CEF5606EBFB55EC1176F968D2316D2FF5F41355DDFDEF93D235061C1B2ED98A6
20EA1FB5281233387FDAE8EE364865FBC8D1848C43D83A4787765065AA7D0880
30B266B6B14FEF87666B242F7FF53E8F4A382213501E5505D99DFE361AABFC64
CDA8636174A8E1D55FE4C6503C0BBC044B7DA221A1BCDE993DD01F9540290C12
AC150FFE07181C5614ADAA3ADA7357021EF798002D5268C4BEB0862F6C5DE1C2
CFD4FE9C19A7CECB98793C002F17DE95F436BFDC281BD93BAD40B188FCECE6F3
4353C42F7960983DB5F5B2ECB58940285C0D8434D4E3D53F29E8F057DE3C1F20
CF3BD70B7E7AC0AD743FCC8C8E922B81ED7B055973E96B1D1625B81ABCE51B07
AC75E407C08448DE2B04DE1766FB3A368A71A1FE6C67385E2C115CAFA68D28E9
FC24C1C2C0F47BA7AF48B7CC43EFC96C4E3CA7DA261E65B75B61C4A6D710814F
02DE206151B74A2900D789D4136D4C59FB7F1C9C4CE17577074B43709CD7D02F
4A0610A1863AEB68B024CA2A53DD34554FECB1A3216C6C0BBC81F0254F4399BE
38038582179E68478978BBC2985DFE50ACCD6E58686F50CFF2F28BCAB66A3979
EE61550130DEC8525C9F40A8A55B8C2B18218D90588BDC7327B6539F5369C477
24F705A6402F463C64FD4B6E640DBADE018FE908F154436716262B6311E57719
3E9DEB107FEB4257C252282FA1786F9D387934E5562E44D94131D84FC844ED60
A6987515FBF4270B6D1FFF53BAB84D9F47ED11F02D5965CE0F56EE5261A3C8D4
48660431E589901AB2D5795E8AAA7B08FC5E77A28A76015BD5FD07917AF8F20D
293F17F5E45C139080F0BBFA25838A24BCB6B95A0CCBDAA29B7021D90FF41B29
1910714118FA4BE2A4F18574CF21576FB68BE087483155D147DA8A271635F018
5891A2B164DCE1BD8BED10FC5EBC102D725D34AD1289C63F048923A9A4654C07
45AE30E62FAF9C23A5AABCED35487EC29F7DF5971A58C9492E402DCD699E3A1C
757F39B002EFC18BF8DBA5865C40B0CE7F3A2D4EB875EE276AB2157926524008
277D5B82C9C862060A4208AB31639C459DA69E15A780763FD8593B1BB6A5F7FD
CEFE9ABE4041C224420B45403EB4FF19902C55C074566C24BB5317D6FD285BF1
FE6A6B76FF897AD8A53176416DB60582A537FE0EC30FC50306C85C7F00FCBABC
1897E4FDF8D6A821305076E7E46F6828FE2514C19A900B66BBA1A5FDFC24F38B
E20117BB1714C24F6E6FEC331E609F8BF45981051A90087ED2B9F80FC4221967
00DCB74A5FB025769288058D9A76C1596072AE4109054BC6F543DD4438929E73
FE449345A44C914C62125EF6EA190DD30ABE28C0FC4A349E6B2EFB7BD5752967
8F48FA175E2879D7C2796AF44EC6AAAC2483894310FD46CE551F52C5BBC54781
4BDA8A2B6187A6724FF1CD858F01817481AB39ECCF2FB33955F3B44C9B539EF2
B7927230FB1F0D5EEEF527E70226D330C36C78B1E36B7384BC6DBC6CBD5F4FED
3DAAC5CF69A931F457E6936FB0AFC41E5C8069208AEAA94150E5AA5231922546
E88E710A95A8A61D94778212799FA3B0C45C4E1BBBBB52A2664A77E1A97C68B9
8ACBF645F99264D62A9EC485DDB4B918F21474508B637112BD89523761BFC730
67063CF65E8F07086D72259625C3B23182008FB11B200AB12765D3BAD16E6AAB
F01649ECEFE15FFE4FEA33275544C35A9D13E034027D9DAAD2CA66228CE3F770
A1F0E4912745405EAEA77293DE75FC65E6458C547C9F1DAB3F2E2CCB52F5EDA7
39047C5F2DDE75BCEAF3987102F077FC5A1E761E852613D31A7855B4CAC8BAB9
2ED432FF0ED265C32369FAE068BC8D32CF8ABAC3B38C998A68F792008A366A22
705E3070BCD523D8DCF42BEB5A85BC6C67D9A4E51353C55E98EDD0C80289E39C
EFACD6233DCA4808D6CCE093768A02826E83CF89FD6052DD40833A298BFD5202
E3EBF1477EEF0E1C8EE8CDF6A93BBC474CF72431B2ECBF2ABD071827AE79F701
718985521B2A4ADECA32C0CFB4E1B55F336072441ACDF7067ACBA9EA45931DE3
CEBC8D1066BC258FE51F0AC37E52418EDDE1102E69A3C67FC8A8FD579E5A66B7
F2FA7F32ECCA480A6FB5B7EB1D7716741DD0E51C9355E0985770DE91EA70FE3B
39A3D72D16D86FED132237DD799609E55BA4EFC885D24CAE28EEE1BBC1140CF8
ADFB45380BD613A81A32C9ABC7DD33E0EBC8EA8922291C2C10B826BE1848EB61
DE5CD4949BDF7FB44027ACB54EC69F69C39B4A7907F79AB428C93FC4109D7917
E5A988F26B32BBF5A38BAD8B7633E3D470F504E7A48CDD8E76BC55BB1136167C
3F2D5179C201A1D5E49E12025F491CC2E6E988597650CFA3C285846B4EB5736D
EEFA0E28CBDB5CD7B1CBFAF76E50722F7F3AEE11A1260B52DC578693C7DDCDF6
46AF70148F9595210294C0A2E03DEC0D9A6AB301E4D417D28FAC12F2D7B001BA
011BC97BC59CDDD6099BE26B0B669FC4C8DC3AEEAE2FA4C47784E32F845F010A
EC787C61F33F107ED6433088B10131A33E38552419A1583755C6C512BCD13630
53E83565476A18F30E1CA2A7E9DB7045B41937251B07415CB022AEF2FB5CD1ED
38D7835A05D56E821DD1710B7FC1E450C0F121FBF96ACEDFB6AF18C5F60EFD4B
8C6CAB3C001EB0562FDD8416D772984988C4998380457E2955070CE47A6C01C5
2B18A194E47F7F7CC11CE3DAF144B98FEEE54C82A3D7E0059B130EB6DE3347D1
918C438A526A713D1AAD2EC4E33503276C4398A18DA9A7EC5E4A45DB62A0530B
2D9121ED64F9F370FA39CB11310D983EC31F9604E07DC6EDBFFABEA90ED6BCDC
01552A35BA146BBC0C586B204D377843FF3111B6B898CBBBE06502F92138B5DF
32E59D8A62CBC0F205D27CD5C7C5B5B898BBDBE9BA58898B7BE10319B6ECDA50
F92B05148C5F8CF2BCD71734184FBF8742DC7A540F5E01FAD4DB72DCE2CCF225
DDE84B066B2F19DE8784751BF1F549CD5DB8B985D23CA1C2C940A7CC6AB93AA3
82940082A2838D5C0BF8C91B2D9A4BFAE74078392840B15697D867DE6BBEB1D6
E8F51E39D20D76B9B3A1BC41C8263605FDBE33257D514C2FF658C056DAD87C2D
35EBFBA28C661E5F9DCE8C8D5C5B075800EE14BEF2431DE73FA24E9C73517682
5051DBABCF7AD77E0DE0AB75A2ED7BDA10A99D785F6E438092FA9C1660C14FFA
0588CA713B93B9AC34A0E7257E6C699A7EA8CF1B66A542C6393011A8D1DDD367
B44C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 18 /grave put
dup 19 /acute put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 67 /C put
dup 68 /D put
dup 76 /L put
dup 79 /O put
dup 81 /Q put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DE884C96BB923B1EC8208BD7DCEAB0FC2293629
2AA1F72C6B470701C381E335C2364CFCEBACDD20CA36182CA7E70AFF5B14B02B
75CBD0738E35DAD8E60CB3DA4DDED557FF9ED386DA52D10615E700751C842FBC
85D89C0E713F556814E051C6CEFE7E83C2F379B88A801DDA565BE73013DD56D9
44D97798564787AE6D5A6A9FB777EEB850C7481B4A353EB9279731512C9B95D3
2ACA3A0D44585E55AFD968135F6492A9381FA2D126CF50373AB7D47B509AE6F5
C4B100BE8334ABE2268DAFB7983BF339540A8D8280F3576CDCD4F21408AA7D95
D50A7C1599E62D4FCAB001D5F9DA84FA530B88F2FE36B36F9968B5CF9FDBFA11
DCA0E08D087C4C5F4D744BFBA60FC22E964CE10AF512C228F4CFC3DB21E38CFE
AC11748F9B23F33426BC4AE3F026AA8178364703A31FFB8A31AB6328AA3B891E
A9410A536479A9A0378B1CE62E0205B073A9C3F004DB440C37234EC8C030E18A
42C47DD0FA1EE3521C98714EC451AB5E544183431A9C5254CA9A7F73A55B8B5D
A98941739E254A5DD0C519CDB28B2F4B9E4850788B0B46E26020DA98EE4E7AA3
9B55089D13329ACB496C86999B89ACF2099533DE1756F0248149468CC0F2C45A
CA7E24A4C93B99FB57A66912299D28DC5EA30C0D4DB0F6CDF4F8F910454D37E2
35E519763C2B61D2B1E6C3DE314A739F6DDBB748D0C6443D23FDFB6D6B162BE3
95DFA7EADEF780AF4D3EACFF2C28AB8FD4530E353E5270D5FA6599BA4CEECD08
BED2831AD39F1E8794319569D09632A4CD65FE1A20DE8FB18109D0F8B7EAE4F5
4715EACD45673984D60AF1EE8E6C93C4F789008648C1F96FA1F8B338EE47E2A2
2305B46D033B7C7A3E634072E1CE2711938D605AAC075BB8E678C339F7B42198
3E61AE2035C3829B1CEC2E9FBCD62C20CB0AE0607EE97E5A017628A9A8A5208E
BECACFDB8FEF5911988ACCD63572FFEE5C40A2025F26C24EC2A87A2745B3933F
41FB3EE69503CAE324705BE07519A307A6530BBD233F45464221B371CAEE0B23
787A20271277CA65E106143B0081D25E339919166E4C5685DB230CEBD10B9AF0
8E23DA4E74DFCE510F5077EF740D30C463127CE5ADC833BDC7BAA33C19375418
91B78E0C56BDCA47D36E0DA51E215709FF69322D42C893A30AC0A0C44A978A37
EC78DBD79E13596918CBA39D1A7B8FA56DFBC0152DADAD834A432D24CC66547C
59DC7F0C6B80BC40B85EAEF73162A69769882CFC0BEC22B159FA7247AF41A886
F7BF1D886DECFC6E509B3A017C7834B1A544B12F93723624194375A2809CC5ED
83A2DE81B12C803BB279C365357848E66AA5C67CDE427A1F1E3DA8EEC5B53ADB
0F70BB6CB4CD118419E5AE7A0C417CE93EC6C64038F6D86D173DE3866CB703A5
B7E042570025A2858D44E8778A93D0EFCB1698A6BED02AA7014FAC6E64110C2C
6A35909BA3264A48984910218E0E1F2541B7EA2CA400818F118C088F3D43EA49
0963426CEDABA6278B3C9EFC1985060B8735BBAF575D8D86C106679FADF3E2C1
08112B3410C6DD545F7A59F287E83C08AD158AE3AC0636BFC3614812566AA522
4920DED841A976A9CC1A12D0B0B5DCE30E6591F5981F108E2A5E9E98E7F4D6E5
435B0F0297ACF9E7FD4AD8D5F07BD945382FD0F175D9DC8005694CE8A36E9375
68560967020315CD9E77CB6A755035B1B05F1C86833EEC02FC813145A0052518
2B0BAC8AB381658DF10814D8C2A0F73A06E3FDD8A67A52C361309B09C86728E4
4F13865DE2D50E0EA7C1C7CDFAD4F1263EC8CEEFCEF44514E52C00E3DDF69890
FB2039F35D4A32526543DF2435BBD4C1D71F141764CFEA370B01BB5859797E98
FD99D07E5C7B5C20FFED563E5B7B8B8F378F4376FCC0454613A1552AE345DE6D
4FB84B28C6B71825F190AE74B9E5CA09AD1C5A025B577077B72959D846B02247
72F8103DFB453D014F7CE5B394E5C41645C450487849394DEFAE55EF3B2E13DB
9B8CBDC0D146C11BD15FD1A85E5DD5C024B2470AEEC0DFDDD245DC5464C6A3C7
B62E37CC5A43AFFAADDDBE3E350147C2A6074B263DFB6FE58624564DABAC8AE9
F3C49A1FE33CC1878F0CEEE222B10F5FCEA940D396E20B5B60768B17FECFA7C2
E784F9A97E4AB249718587F781488AACE904EFE2E78325BBCFCA431754FEE152
B8F789FA99F597E7E49C012CEF743BE11DDC9BEEF95397FF3C8AC5E6231F1EDF
016D7E52DDDD9706C38E8855C9521A69E792093D1C0D0326A9D87C65D63C14BB
2F49ED2D369DE7A3DF521919AEBB6A5817AA99274DF957210A401145ADFAC047
88B5B264964479A2AA2792AE6A55278C743B46A65C20965933DEA1885A3CBF4D
4D9CEBC3315EDD4CF4A4A81694E5C1EA3D874514FAA096D9D89676B347C64732
4217F9B0C06A5D0CD47033F6D2513DEF0A7F56E92112CCBD815A604186A0BC59
14A5A2FFEA97D76432CE155241A9763C02896AC7A39654222AFBB08DE81582F0
FA472833DD4428DA0407092F163029EC7529DB790B778AEFBBC8914D0B48228E
635AB82298DFBEC78BC36FFC8AF8522F22E3B7B7B9C8EEB3B1B5EAA45C64D54A
253FB2AE3D37E003204C7B016B1F58EF688D9D412B3C31018C1CFB192A204EC8
B3AD0BFE2AFDE0AA0A7DED469C64A53949365A2535BE0A136231B299C475355C
A70618828BE33503A91B6BEE322350C8E0566786BE959C2A2F5E9385BA8C8E42
6A6EE30848498C341054EB257081A398738A4FCB1754178BAD3345FE58C4A4AC
0C6726606CB1A3A8C57A824D37D900278E99D4E81BC6A88E2572ED011D3587B0
1CA9205B1AE2D07083B0BF8E4F105722A9BCB56A311FFB2A6A1E30A2F5AECE77
2CB4AA9FFCFE7EC0CDF981176BBEBD60BFC9B35A6489A102010D7FB1A8B76CE9
CAA1258FBE46ACA5F91CFC42CE221D0499E9B05E06CC365C5E9822E8C95543DA
2D89794FD537D7AC8725E470CF423AD608095ED66C2F96E20E2FDD071C3280F5
71B7450977E4069568606D6A522632D8F2A93055BBB30B123062656BF913373C
C3EF89EA49BD5A2DFAB27E05E876DCA0C5489848C5FCEEE5FAC3E56BA3B08ABB
CC4EBD9E1655169B51765AEE96012FA4022A429DAE1176C7724CEEAC1D8A8DA0
0BE22FB44E0F5B57CA8975951B186DF6A9B62B28B0DA02CD30889F575471AA9C
3FD66DF7387B4DEA2E7A59FFB0AB15B96C01EEEE66FDD6947B83E7859D8B52FB
BBDC95998DEF2E58356C2D95FBB4826E38BCCE6500E94902F4753806FAF0FD8C
3F73B033A2E67688751474B22D25F7819C7E99BD3394EB01EEB978CE6B44C0B8
7CAD89F652D5C6424C6D0348DC7D7C6706066B75A8CD658207E378EF2A3A41D1
8C2007D951717D4E7E17D9E9A95138859A819D921EDD60103A20D82CADE30443
B6879EC419CF3AD4CAA5F5EBAE56AB734FD330D412A444F072A80B4624917E37
8761B581ADC62CAB56EA48AA0D449535D69F00DD25631C8F22059AED03C3FCE6
1093F3FBD296A5FD8D4EC5712CC7AF04E70E9E6227EF91239E7CFFD239B9021E
D755D07B8D4D86246B30911BC07734E55852E23B1DA9B9AEFB2576CDC3942819
204B3DF56684F93DC0838C1917ABDEDC2203587EE303E8997539E6E720221E94
8987F3F4A741E52B08B64E9586DB6610FC1E7CA4071F53DEBEB2AA8AE34538B3
B812DA2EA2EE5BA19AC90695E436D6B0129745977065519D41FEA05DE277A2BD
6BF981E70310B8A923BF37C6238712C33E29D059AD32CD87DFE82C5861D06A93
6E6000F6B60072EF21954716FF28713D488FAEB0294B62BAF5C7DEA508980547
FA5474AE86F48C3C5FBA2F06DBF435673A0E2B798C612172660B703C1243A911
0E4CAD2443E6724FD24EF80C565A158F0835D70F9F22D9E4EC0EFB3BE975011B
4D741E81AF94FA6EDDAAD9F4BFE7FD82AF03CBFC91B1A868DFE2CD9E7AF92223
45E319126AD8176C24DBEDD2808DBEF3C6BDDD95BAB691BB29CFEA534319E195
268F9BA2F1518AC40027D89A07A5B9E4C87FE8878535BCD860EE9F90C095FCDD
345D4E041CE9BE982C78A9AA8549443D1AB9AD6B0CE790F5F9F45695A30B4A82
AF5946F02161943D96760214DA5B3488A3A8656E62CD8F0BD00FE8EB0E42F227
7ECDC7A6DB2F27458527E6C5341811F5E347E954DCB8E8EF675047023AF7015B
32194D4DCD4D6D3E000B54D8E622F492ACD8D6C6254658340DB70968FAAED122
6A949C78D176733CA14273A8C56A49A1B72C6FC4C10EEE2D3E0BCF702A36CB57
D824D250AC3F036BFD854D622C39534F12614E0DF155D72F1EB2508279648508
3EEB79B1901DE7CE1A8A01975DFAD18BB4620D605DBFE2EA87A0A3572AF9A41A
8CF5D2839845A6610F0E9C2FD31F59FFD1B27092BE0B7D0E7FC589CDC1BCF8CC
E6AA6AC22F803512893AE1A2E15A580584441A47613F5716B2A90F443F743581
4570E9FB7A0D68AABE3A561F366A6538EC5533045D9142FB025207A92F5B53E4
86B7D160ED4500062FCB05921DC8B41BF633C1A273C81BEF4310F0EF10BE469E
AA01FE48CBE4467EF11A3DEC42A6BF2C3A1D8C200B9BD27297394715F249D596
CE87FA63B9E15AA17C7461AA6AF7C979504A65144CD60A27450A56E9A73DEFAB
5705B3F3E00AF92D44D050FC316A856FB1C9C6ECCC102B5E17153DAD1E95EB34
0FB4EF7CE1CCE19C96009299CC93A2AC49D95F9C738F96236E8B6F2194B53320
4715D64AE267F95E512D283F392F75D61A349AE0D0D6C55B03E339426FF676C3
CEBAC121C19E31510BC58D2517B4CFC445475979F20524EF3F6140E9993A8D96
10EA7A3AE9AA9962C3C597E3266F2136FD0A4C7225452CEABC1F8EBF9C735085
DE8F8A09815D38B5FF9361D6D4942668F7386403FA491B29D5154B441455947C
23423719828E4246B593A0082F1556A4262046855F7CE415D6D539727A10FB44
8BAD0C8CCEA6976B04FF41636352AFD0185B96D9AFF7AC2C4EB87CF29348908B
B482D7DA4C3676A2323A390402D441CC4544D6B0FD9932EAD3DF9BB251F2978A
E1380EA06F2FF00164891B38EA3B716B91319E68F96D48C9E670EECAEC0DAF5C
FBAA7FB7642ED234B341E916380332D70356F2E0261259D8012233DAC4CE2FEE
71DFFADBC78F8AAE651CA682AB2B5AF0B854BF6AEE87400C8C68ABC823227D15
06927974B4E9582617573FB5E7043BA54F7D9A4884EAD7A8624E0FC6C3A1FC48
7A0D1AC32429035B3CD574BA9A237BD00A8EC452A32EAE8596B14DC203B5FD63
2B3E21776A95E5C42D37E15247B528EC68078846BE61152725E72493193203DE
0E8A0EF92D1B9652956D05BCDBCDA8B1329836CC61CAD24BC198656C479668B7
23250735E1FA76EBD3A3CC8C501FD45018EF7AC2502C104B38DDD2CADBA2D7B6
39B09CE96F5959E5A2F159BCD4F7F57AE2DAEE41ED2C03EE679C2524FA0A0178
02FB04551B69F2605DD44A3DDE21243FED9EE7EA50C9A6A82A66B7772BB8C6B5
36288DBB885C46C5941674ABE6AE5FA247B1F76633F865D017872F2615D3F543
9F80B0914DD6F26C6F3B6B8E5BABFD9114DE470A002AF1B9BF751D3D9CC67DBA
EB69C61E26F27B100B5EFB9B1F032DD45C2A0AA673DE90A94DF891B27E766F49
AEB955A084D37F65D14AD8FBE90468991C0E1AF3E3648517CBFBE1CC47E02D6E
6EFFA7BF5C5AD1A6C38C01BC58C6278D658C29A50F9D5921F048E0B7534108D8
E07DBEBF4043978AF4697E0FB7675E94E39642BA501577F138F45208CAE6F679
8E336985A77DD489AFFC3932408D232A21AA18F24AFF8C082EF75646A307C200
FE1271AF37A93DCF2C05220A36C804F66910CD50EDCC7DE41C9B8BB5520F8418
91A4F4436A2B915EC3DF5B80251A71DB297F660C2C57C003C8F095CB055D8D84
BB14E5D4F98E2A91F39798ED8AA307D5DC104E587B2A7A5332B75CE3EF6ABAF2
CC4934847839E085CB6F9824FFE777BE28BB7F1E99B6166A3A68A46332569841
FC5BDC7F0D78C778190DD5AEEBEF716BDC59DE943C521160F499DFC1226B2CB5
558F77ED28F125400BFFE5EA27C561B28B6E2D8CB94E98A1D8C558E25568C734
50357F4AFAB9AE7290007F3DF45F8A59BFBBAE72F02077B5CB8B1859BA427A79
6668E6592563A030CB80D22411D6B1FA9E58AA7DBCC7CF65F90B46F722DCE5D8
E5D03090C4EBB04CC57A45300282249B72EC8127ED9713A1A122F0ABFA8D9D49
DA53D3889284E796FBBD4F79592024B54CD2EC33F618B8732D1065EBA84AB9B4
50334CA212716E8C1FABD5676D9FC71CDD377769229E4148182DA80ACC27DEA0
032AD3A4B1AE95891F060217C9207952D691423111281B6CAC02AD8A935BE444
7F4A5A148302BE9BBCE2903554E5960869082E2BBE9DFE58623F1484EE7E2D71
485411D12BCBE2D71A11BC22323D163E5A277BEFCC5D261E2513EDEC83343657
87366321DE13F3D8B52E9AB01329D32E23487B87E8E672F48655246F8E2F11CF
3A9CA068DE1612E419E0B3D05F8DF43C78FFE9BCC1E4BFBB554A339FFB4BAE4B
06364F1BDC52642E5F78E61DDD831EA150D6CCC2329A6FFF58F388B6888FA9ED
EA53026F9223DC6269A5A234B99B80AEAB4F826C676DAE55382F5B187128A747
6E9DE05D11B58F297E6B9BC9A60B0E139740B6E4D1A0A5A93C97FCC08A6E6797
6FD7D0940E948FE1013F8B879B6E659EC84BC8977EBF2497310E845625F821EE
360A6530CAC045F2CA48B688B1FFC731994D950222FC378CFBCD20C6C08A605D
B91C49F544BCB4253D9CAD9004411EEFB3581334342F1AAAD3A569242C5C5AB2
F2812982A74B78562E769C959DF1E65C55741D752E7A0FD0B7F0EC4D022EC99F
9F5C0E6F37FC4E9EEC8E62FD586321BBEEB7DB0F63F775A3C48C6B20FEC0AD42
26EDC37F3C48A4E054D8E00706565F99E2DD6AD5337DB38A0A3C6319420EC663
F61BE217F7FD6A926F64562F7FD0B27CCCAB1F8D75F2EC975A3C8A997B28817C
26BAA89E18CB9BF854748BA57D4131461298768EC22DDC57DDA6073E024E0CB0
4242DC041D7DDD1AE00FBCC269F921C65711A5EB8251B06351D9F0AF04F3372C
ED29B4641E59513EDD8F6344271AA6568E3C011256250383861178561740685F
781F04852492E12F33F85250CEDCCE0A5946A5BFD5A2B9E74C94917EF00F0205
4E4FF95ACEDC39F4EFEFA300F6468EFB024B73DA3FD8013B9D943B6F4A3A0D6B
70CE2F70A5910F79770CDD98E9B6D534E1A9757629D5192C8E1206249989F6EE
A08C59E43DDC6F5A3B63C4EC0FA71136EE09C3ED77B0A5E1AB4D8F34B3C82463
1BEFE63FE79D29970ECADC8A87EC94DB4BBB02DC826DABB0DD55CC6F644F4665
EB76F23C5A1DB89D1E7EA73A8BF2647A8B47B722675B38412230EA479DCA3A48
1F829EE8A6FBCAF08CB06D80B7003E3B5AB66F6313CBC0876B8AE7B21FB90E2F
B88A730400D352EDD7FDA5685B8966108EE5B4D2E6D21B36509377B3C91D19FD
E4742B5E4A29EE330016A745E68EFABAEF5B9AF6693D7EED8B560EB6B4D237C9
20BB8D759A378F4E80F5E93DBF9A4CCFC76ADA5B9A51D75EE3680F61CD4DD446
E761F609E15005D344ADBB5F6077704B8B59C1DC2D87D0DB079DED2D406CAF10
A7F05FC7DEFCF9B1D0F454672312EA134333183E0C53D3582EA0E46BA8F89FBF
EB85B71E75079DE79BD78BCD81ADF069DE71BA1627D0BD3821945F5D120636B1
78462D4F56ED9215ADA6087611A0805792FDD70C51E917C9E9F0571E998988AC
23A17B5B9EB22D45997CFD8B8EC912AE104C8976D43D408214222F5ED8366FEC
5921AFB1214987C64E91C9857160563BF7366E1CEE8F712F5AAFA36ED9F7A8E5
D97638A70C5F128F1A106603F035DF70AFF10F367FD8142CF6603DD66637A14D
1CA308294D2519EF1FEF64004B9BE83AB56F18689E04F36005DC17FCFED81C66
7BC271038827B97169490BEC605EE90BFBD6F7A5905BC8A9786CEC28D3A7C110
4ACAAE60D11DF29EB9BFE1FB8D12251B6DDE2B2FAA526FBF0FE0EA0DAAE3DC20
7C637F63A11CE57339C010CCBB5DC84A18230E2E8D3FAF82A233D09B0A1B12A9
DD00717C594911466F35B9F71E8423CAE04283F4BCA5D04E1EB5F06F09C4DB36
4EAA7D480DB2DF4C038475D02C4FA9B32A35EEB455B60F9773F1EC42B98BDDD1
CCB7B53504C0B844596C76194C8F47D585BD1A002036E3C0259D68165226D60E
27188FC866E1E6AC2989117604A83BF923234941FA3C7A6506BC917B84C7B758
2EE624C3A626EE9A90642B2F209B56E377A56FD36F07E634F5E80863291E7DF2
3A2EAFAD2022279DB2433B956631FA98CA991715E95E76B3F86782043A47FC8F
BB8DC693B66B9D43A3E1F94CD85537693B39C828E5B591FA97BCA4F6630FE217
6D62F0E6822D780D5E18D6E00FB86BA3578589A939A0B92E19DC1FCD5F66BBD6
5C7BDD34833EFDFD9C587567E27B706CF5E2268AC19E11A263168432D6B9DC0B
150AF17D72394AE4573EBADD77E482DE49B57C48A514DEFAEE0108CA5D6BF3D8
6CA4E67DF7883CAE83D8CA8F8A9F1A095761635BF8339CE69898172FDD23486E
2C7C4695B8DF226057742CFC81E067958DC8958DFB81685FB5EF0FF43ED6F6C6
58893DFBF0DB2EFB6719CF02FDC6D8A44E2A42F110A89983A07A1C6ADD6FFCE4
4E2A219C82A7A3BA411FC746CCEAC36A2642B6CEA7BBA9EE68EEC7861D135F8B
AA8E187D8159BF81C0868AE2341B44DD4C2DF10FF8E394E3BE423D55B5C8FAFC
335151796FD57617BC5693613582CD0E3088702FBA95F56511913DA50C7CE3C8
83AB4132E353AA468FE003410F5CF7CF8271E1834EA0FC966E9672AC817A3E10
CA458933237BFA5907DED1AB4BA902188FA9DD6B779A20BD5BE4C65450B6F4F5
144FDAFC0740EE018A1E2E72C2F9906662D65A4E66799480DAFC50C51E27333B
0365ACB3D59154AC64CB36506331E4847895032317CE4FB014385600649B0DDB
F8EAC033C6BF9D1C1FDD6835BFD03E5EF57D320DA9A2241619C4B2F0C6A9C5FC
3543BC1B19E951FE6A7B3FF66C52A0C92C618726FED6702054A9D8A626824A4D
A81DF7FBDD7A1A9A5CEB353C29EA95A3A1C26E3B8DC17461D17F2159B5ABBABC
DEE5DD8DD35AE3EAC0BE5651B0942409ED140C38D2CB005B4E29A3BCFEC38B99
934EB612D5FAA8149406E48839BBA210FC04F2C9E7743CF8A560792D78137344
4DAD64A1D9757BED39D4559FD979B7F98A91061B8ECB1B5F180A68B283550F10
81482B73B57DEBCF9AEF9A9EFC6E9FE4CC07D895814F3876F48DAD8E8CD18D7C
27B57F530F7DC2D4C568DA17E6557A4542C024C3FB6638D5F1B80E74ECA259AF
3DB83D09A59990FCA7847E68D900F738B4037706DA5D510DA080FD00DEADDC5E
4E875EACAFA69C3B31134D7433EEB44C724E1E878DC7AD63E2603FBBA75D0111
F02DD14764E8F0453A235161DD77D0E54041FA36D1A76B02F8B146793C8FE5D1
946AB35E5A10397FBA3F6E1171FA44AD47142317C7E50D144EDCDD63934B3043
BB1192F0AF7218DF550F55697006A1EAEF7A81F9BA8A6381E9F9CD636CDD31EC
EB794D45BD0D5C59B1DB7C26A585B2B2F438A1D7AA763DD1B6458628C768D03E
5C55E714ED11D5D58C5878DB126037339815605966CB40A66C62AE5F78EDFA22
868019CC6FBBDD37E33BEEE8206F5E67D5456047A1C6784E60C8B0C986149084
DDA3FE2CB459AB7EA91A80D768A4239C13F0CD0E08F7B943942ACAF0FF199D8C
1180BE63398206F6FFC8D91CA46C9242AB5404AF46AF39F04E1EC333168EB2C8
E2C1841123B5EBF018EA67683158D11D5EB947347BC8FC17B73DBB247D019F40
45DD6FD5F4745E196421D2712E8B7A9FC7491844EBB12F476A404FC5FC5E68CB
0FD9A4D39EC820E0080DC302C7C6DB12ACA13E5890E516EDB0E588BF8DA7E7A7
1E04E6FB24BBFD8FF546A04F27789124235FCBB70902E513D51CD2E298C688C0
BB70885F48A6360D1C241CC34E479BEDDC414794836F2002E6465B0672782ECC
F1F0175327191F12BCAB7AE086ADF17A680418B74562F471ACB0310D1C337DAF
2DA0965B8ECD04553CE00883CCF2C3B0499765E717989FEE200DC2319C895FAE
D0BA38E0E8A74E8963844163BBACC25BC2618C3ACB79952579CF0D26BEA7E600
9941B55B35A696685B0F9446B533A6CB4340155C25655AD1C9D7D7EA24DBCED8
FA7FF63C46FF3A08CB84546100A441BEB8BEDC6B0E8D1B81C5E2122F107126B5
DAE72A076F7B907DC8A7F3E17A14215124CDD6D44E25BB3F9DD7DBF9B2924B61
8F7E4B1D4098F76A0A77D73E0F5079BBBBB4B30C23E4CF0D1229AD81CF68F1C3
9BBB2E72904AF67D25C569AC38BABC9C37933B56D82D25DCA78F7C3AA02B60E9
F8F8CB892E9BEF6CE68EFB2212ADDACDC9FF57A0E9CBA977F3C91806A8CA83CB
EE927A46B1BC0A7D4215E8F2525ABBB8784991B8A65BCBDB1388D910469EFBDE
1DB5A33E592ABE0F06CE9FD53D3D03F1AD53EC3027E49402AC84E51C9D1D1E92
D27AEE0923C6D15B12992C17856C539B826B3C1B3BEABFB3E22E02DBEBB0C2F3
14792DB2DE65CA717E94CA572230E1BD88F39C45656F40AA01449E002CC2B838
A94518232E1EC9EBD6B74116B19AF9AB135C799C01AB47FC4C3B2AC02D41E04C
9B98154C28E6936E09681286F36CACD0D29B5539617782E0F5AC5136C945416B
5429781E1652C8E4F15FD0915166156DA06F6BE09350975C0A81ECA6870F7F3F
57AB9929FAC68794CC88358B429BC91949D0036F54D7559901ADDDDDA5293736
550C87945471859E375D31DF3ED4FA5E75EF927565453C308AD038551F80EC5D
9C701EA7A7FAA42938EEC01CEB658D8B6368093C486679A7B8A8CA02DCD0899A
957C721C12D5B7428F8E5AFCDE3FB3AA896B471CAD8BAD627EFE4DEAE13C0BE6
8A5A0F2E656373D032F3F9594650DF01AE17AFFA60E82D465E5332A1A808856A
1BB10DF9AF9981584B635DA51C9C0B0DE3C92CB46DC273D87E8FAB9EE4BD75B5
D0CC5BCB581C52530DDE76923AF2B1C262CEBCB08ACFE315834DFEC5DBF19D4E
97DA0AC1B82EC40B532AFF4867BBE692886B8CC6AB9F2F148A9D968BE93E2FB5
2D17BD4A08F8195FED73A9F2A537D3706CB0E01227F2158AAF1B44F9A2D09952
3B7D9A9E13B9D15AF327F30B2E9DC987FAE6C6E84341517D1170FBDF61898344
88FA19FD7D36FD830DCB005DCF39C8B78D82D44731CDC9BAEEB40003719D355F
0600FB61DC2815D89B66FC9DB9F2723604C077C6AA5C7A02BFB603FD9CBBED1C
FAFD4CA4031FFC38701CB34EE1F64E347095A2297DD1E43EBC007BECFEFCF4B0
557AB48A4AA3DAB4CC945683C8DA2D724D90FF43CABCCE04E2D9E38AC7256B18
F4470EBCB54C4FD4935AE5DCE84D8795301B9FA63DFDE4B65AB8A442FF51BB13
C418E1BEACD7911BD61F37B15624CD1FB71F629BE023BD5D0E593F09B7FE0759
710195CC5ADF0D9648D93471F57243D5430F51A195F74C7C38B9B6ABA70CD8B7
DC167133C9F8213E326BC279CFF7DBF81D756D9DEA0CEC642D15B40543F19556
B6D726B58DF1B241FE72402D00FFB5E0732FF5E04C73632121C654F679F354B4
47141CD7DCC12737408FF2A2A2A75150394E941B62259CEA947F517BA87016C7
10A8F3DFA074C60E7470443369A70852EBF6E57132DE18FB6C73522BDEC54EB4
3EDE128A6292F354FEDE967350D433C965F0F9F561ECD2333B9C39911B646606
0831B0A83F4DE4E989E3357D1A7BB43C024CDBA4AEA99A8D7F1860F2E1F450CF
9158B9DA66E35B3E53DBFE386A72166448A50DCC964594EBD6DE0331882209F0
415D3DD4A08CEF6B61F8EF1DB419DE30E17B13588B17F717F01E77E058460D03
8FEE41151CF28E60EDBE55A733433E8AB8D6A8C459B9F30C49FADBC0FE208A68
4928310F4CF21BBCE7D788AE6C4C32572793FA5493C2CE425F00EA18E13E60AE
068E30464161702765A67753A2CEA35FC58F120C84FC9BDCE9BC18BFDCC776A2
A6E66242878E71BB8275A238FC89921183BC9DA15E452D05C7E58B5CDAE28A1F
4668E66C38163B507FB8BE347465982B31CB2DB13DC711333F69FC119EF74E3D
E6473AADF7689632836A9B6A305201BDAABA9F7C0DA34617B3841E5CF9188AA1
3564146708962FF282B8A9F5F8472A96347E5EDE5CEC0DDCB0364B172E97E91A
4D51AF8677BC1BEF21E4040EF15DFDB244652ADF39EE10C334542048BF8D9ABB
193DC0624C90572E612DA70D49DE8CA0D01F6D80C756DFBFE76BECC8394B7C2F
25742CB80BCE8F8B130022F49CE858757AD16BD6D3CEBFB7C33738C38CDB2924
8987447C64A1285D0FB1946EB6D2AF08911241F1AA0C0363F52AEB939BE9C735
0239D1869F83F38D15D35C10C036974AD35B71385AD1A52E6592FD3C190137A7
936D6254BF08F56DFB0102DDF1FF654917D1F0EB4E6DBC21B45A4BFA3E3FAA66
4A04EB837B3BFB8CDEBCF81FAB2E4511E19013B3B6E2DD6E0BDF7AB046FA738E
7499A1296DC84BBEE4F4181BE1BB06D5526B2B569BB2FE48A0174F1AFC68CE72
3515E3A616D0DB535D93322BE02F9FF2CBF051A5C935FDE44B3F849CEC5E1A47
F68F1B2C28A02638EF1D41B4A787B3DFAD4CC4EE1784058F03A7BB3BBAEF8A8F
CFCAE7C2CB7AA3AE05E724C617CED2814F471A819697B35117F5498C7892359D
72DAF767BA7ADEEB87EB4BDD49917C085F40DF659B9D0703880B1013FB51739C
06D8E2617937F5B36B59C9C8F34F63F8243ADF0C07C66776F2D288822F96EE5F
EE75F120545C07A0B0AB149DCA2B1ED82FD13D0FAE11118388BA2619EDCF46B5
7F37EEBA8DFF945B9059368BDBAEAD236244CB07BF74FCAEE0B01A0572C0F7A4
CE8B80CAA46E1BA0BEFEA4B6A4962B435118B4D5B4C0303054FB4901593BDBD2
98CC9A0FC8D79517CD7FC5A38CA150FFC47FD2165669FE3757ADC01DD0B23635
3769BC8147B59687661E13B8301D440775DF10A0232A9C69E80F0C1E0D351A25
1A3968A273AA6CC2BDE385AD4BDB3D43BEE5AEF7E5C94443384BCE2DD7EA7839
2484BC3D568860530381A073B12DFC6CD23472A448F122E65317E69EBB7A1ECF
26553E3AEA82580E99C0017DBF7E7794F0994F929F55C4C028C21531EF0C9B0D
CB82DA549707C973357856E8456A84C80D9DA09B6BA16A1B8231FEF4D2F4A628
C99CFA439C7BD5D54FE962B91B70E468E85446A18AF50F5E99D04366CE245095
B21421405EBA41C8C44081BAA26CE7ED638EC0A9AEBAC0C90BED750671F59699
8F5A3726FDE820B294CD6228DB3F29E1A63F49B4C362A3A0BF82AC8BB8F15C37
B57C1BCD9740474E660AFA52E69231A7EEF3138DD633C117151DEF810856D422
16F2146E96875915B04811D819FBA8C2F5BDEDD1B6AEE4A4B93318A71B109E44
85CC7E08E9CCC38F73465A44B281F34E52232FACD72385F16B6E3B22B8506F2E
1A55C927A5C8C39C9413596F8ECBCFD05B013183489AA5E66A05DA7209395593
BC531F9999905301A35A52E6FF0ED11DEFBA289FE4408C28C48B664582E765B3
3F4772601404A75400BFCE6BB4D82E4998E43A1CBA8606706A71F3F177E33093
87833C61B33BFCAA37EE84438E9E3AAC21FFFD7A1DD4CBB1ACA8FEF429F4FDE8
D7007D5109A2C614AEE9F13F7B178DAB839928E83B956D40AD3FED8EEF9101BA
2D55C40C346A2270E0EFEC4B4CDCB50A6AFA209A3D1691841FE71703C552B6C0
B5810E094E8AA7A58661F6EA430C0095D6623BC5BCF4290AC090B2DF8552A8E1
21D46242A8609B2CC9F58A9001B5E53256CA117CE9E15E1B72BD071E9B282915
AF8248BC08F51E2984798585184B260CB578184185FE738BF39B01268CC42046
E5277B5F86B2BD8BBD9E4AB661E01D1082776A71C48966FC73D39A67D3FD2131
9C9536B1D942249976C73F10BE1711DB04CB191ABEA3E4A7AB70D904216C49A1
60EE1753323FB4D08DCACADACDAF9CE38AB6C0355DDB0CD54409D093142B47AC
479A0FEDCB6898507F84D613E22A28189798754759FB966377A2746956D458D2
72AB0D2E7146C0EE5A6061684D83F34E657BDA80266A85F539FB67434FDFCB90
D6D2CBED701DABC06FB84FA845B86FA5981D06BFDCBBB5BEC1445E0C59FB3733
741ADE0D884DF8AF031457374F40A4FC0D308E1BB20674C4F53676367C9A2E9F
7C4CF052F22A03FB5754B463908E2AEA17C4C8304C547727BF8B753719E2A252
52EA223BC033710764E7BED196C80069976B317DCD08B5B7E7B8E430610FE562
4C24899B25D8C8AE59B9CE21B0A81574D089B33DCEA528EF08DE15D441239F5C
6BA8CC3E2E14D96AAA4461B0346D6573BFB249A3F24C5A57FD0A4FD169D42A9E
8CECA5893AF7BFDBE51988478E7446AB9D902ECAB157476FC346096AAAC3FA20
155BFCB642EA4C1CAAF134091F86E810EA3E63F7AA21F3A843532736944AECDA
E3479DEF424F8F8958235B0F40BB2DDCBF5081E91646B530CD8067667F610518
B7E458DFF09113557FE3B2721EC818C31E220DEE114F71A20F33A6B7583FD47B
087E26F5AF6F398A91D866042C79A30C82C491A16ED86E07D8E4CA9712DAC0BC
52989DB0AB523620C1C819664575BD263F96457219ECA4698BD47D075B734658
19DBCD1F493AF333054F4477FE46E371BFBD909BD56E10550A4A834890043DDD
6D02EC819A211D2B22C6B87F6842E30D214263ED139CD1F3D4053787E125C5B3
71CFFB18C161F40728A032084480984CD3E6AAFACB72EC2D9390C1CAB855C963
E63E7086D27D0A5C2DF6A283C933BB21B4CB2098905458D88FFD31E1899CDF80
340964E125080E8E32C499409F9C3532DB8DF3412EC52D06A22EB7EFC72C2386
AF28140D7C2079D417B4F788BEF987621444730606AB3940860C99D580E2EBDB
203F37F7B458681C2503B458B717671F712A67128E1F6E12743FDA2570177654
1AE28DCE30C0A0414543B3712E36B28D02B2388CA61E6495820B1FC929B1A13D
0430CA46983A447DE5F71996AE33BD3026BF366AF71F42B270
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /grave put
dup 19 /acute put
dup 39 /quoteright put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 67 /C put
dup 69 /E put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238BFD85F8
8B0CC9508AFAB7292EBD17DB0F2BFA908F5E9FE55BD80D0E09A13A99D6D78365
36BA7593CE5543247D66D8891E5DEC2B7C87192EFDA892E8AC1E9B559A64768B
17FECFA7C2E70A4086F25183DAA9D885540C694EAA2ABE187EEF62A17CC2296C
57AD719113AE401187A9F5D23D838B188770F00B6A73B4239EF3267C021CA4C0
E99CA59B8A4F3CA3CD71A95070A9FEC8F6C2F063E2E581E003C70964DC3C79E0
CF0C3E2920CDC5716B66919637B2739D42973FA53DAF7D7C58E77CCFC1C840AB
18CB17F409EDEC0812CA7E7EB1A888D7B4231CFBB7D40CCD4D8CE688C6D49F1A
AEFA49B9B5DA445F2BF747D569903637F4AC2E34D098BC5881AA6EE7CABD7304
4A067281ABBB4BF713259C46AF7B6A2D09BBB151230116CE4D37F797DD4B6950
15F4644201038D6B0F80DFF8D1E1BAFDDF792EDFE51524361671D6E0ED8901F9
0F6F0F46151FF6535C0E67D552DDF48DB5828023775F598CCB96C753034BBD5C
7F448EE589CF2A373F181A2A9F65CDC180FC30901A9FEFC0A3D8978F49F04485
D134505A1CC189FBC164BB3CD102DDB3F48F2ABD308D6E4CFDECD10284A8D126
A604EF1A268D4BD9CBA309C2B5F61449B7B8B305D5BA7EBC2EF422BA72539FE1
F8A2832C764EE4572A8A76E0C9BC6432150056C18779BB8148ACE516F1D4D88B
072B10C44A60DDC139D55A69B6CAB613145652A96181AAA5EF6E177DFACC39BF
F83CBD73AF592F40DE3F15948C0DE2AD196CFC2ECEB0291EEDEC8689A98633C9
302B82763D3C8145F36EC1A0C6CF7962A86B26F3AB70A8D25526BAD00D4DAE72
34E388FAC6474970914857919926E5A42548B9D301D3673A778B833326CE8172
363B1B4AEFDFEF230CE01AC5F13D51C894D53C87D1C2D3C5D7EFFCD4773B39C5
EC2CDDA3AC6C0C12D644B9FB989674111A60347FBD90085AAA33E69BE4F48389
1FF5C525ACE7CC2C13D90FE788F6D726A04A5D06B0C05E69A239F52F5EAF4159
63CC1BC0635BBEF4E812CA5E0E78803587381E464C6B20242E8CD67888F92E65
5BA87F5EB2D259F1321FDC68CDD7964228AD7A5AA908FB05F63FF80861D8D4E2
DFC75C0F145FBEBB48466ADB7CE83436392341ACE718440F9AC620FFF89CFB7F
CB1955C7DC8AF84AF6A11945DDE2E1319753C0C2DBAB3BD971C724C39DE00C87
705C1928CBC84B7F92DCD8A43E347008B9A40681ED8E00E63D89CA32AE0687DC
232178A07988FECAF31DC72E407853D1AA87FB74FC58F8545711566DAF69B14E
DE6AAFB6ABA0231E61E8A22FAA10A45B83C38174CBD6A657C71382FE7B5799FC
CA94BDE31C7617E323AC4D7CEF6E182077C122034ACB9F4B7FFB33AC494F4A9A
AFE6C88E42BACBAACBD8298AB199F7284E9E071F08AA753BB312B417B31F7DB3
4D7A3DA8793C895AE5C6E181C4388F78E1AB35E2D841DC00E9CB57403C0CE7DB
59931D70D2BE78B30B8918B05F156FF0D82605DB9B76E970288AF3361EE4B989
D3A3B199DF59E8576E72A8186570701F79F6830E4D9F92E56E45C5C6F153253C
15186D36C803FD0E67B1A0045A93C39E816587D025EA6DC0DD5BA4BDCA9373B8
A3E7ACB36B2CB2DD95EF59D6FB4A1596FB497EAAA77D29661BDA8F4229E8154D
D6BD5B067B7CB4DC96A0A9D7B54F571B761C675780487C540129980331919ADB
26D2A2BEF33383AA8A049B6904B69FB1E640A4C06140EDABB2D31B00E802A431
C42025802AFD4B63FDB403E445439F65967C51EEF133714249D0F9F9C71B704E
04D0E722C255660F49F3200EBA8A7AC737BA5F4107A2A3862023349C54741FC7
128048CE8F2211DD22A94A40DE92BA900FDB7E6D6EBCA778F4D62307B2F042B4
F93139EA35AB802943B5628BC95CEC4FBB62C538399C84BC310080CD8484A858
274DF1A5A232B2533A253DBD0BF8D9264ED3E1F628D703ADB08019BEB61053DB
FD5D6E2573454F40424120C711B92AEF8134F99A6B9F48E6DEA92FD943B1D0E2
BB8E20D3D8627F759D29DBBEA162E41A04BD1198B2BB08D42023B94C5E0DAEB9
3242DFA10483B09CA31088D9FDA9687470E4991947C335657620CFFE6CAF72E7
4A8C30842F3CDE43078FEBC262C5E48BAEF4A7FDF104855232EFF52A02FFB38A
2AB78B6479035DA7CCE4A7CB7CECFC2FD37984B6B44A2566E683A881109B67F0
A751CD59A2E19D16A903BC4DE8F7C00C0F17D729F36FC61EE2F48F13943C8B81
2B59382014B8F5426C43356DCB04612AE440CBF07B8A8DC0B24157089E5033F1
4201CB1E5F4CC8301ED12E93B18927331E648F1227E723536914D2D3F4BAB062
831E02CF5BB04BE70AD693E5C1EE5A64B3ED6EC50681A387F1ECD9FB2A1BBB29
A8B66B2A3B2FFCDF1A4368603D6D654B80602949369F968009CFB0B7CA02D01D
12E2AE10BA3D10A89AA7443729AF1758A378BBED7AD9C0C975D745EDF39BD132
361B0219B391A3244E970742707C4C1346E10838205287C2ED1E0056696B5D80
A209D84424A45C2B0A56B928F5B1AF33A91AB4534562322EDB6B87A373EE9594
37D52A8CA1EBC4E87309A1D582AD1FA988E8DF9A1DACDAF159A27934B16BD1AB
63701C7D0D59ABD2048CEC24861DDB361B62623BE5183C3292DCC1D4F8AD449F
AA617FE65BF412ED49B7258A37008484F27750EAEAE17A63DC636EE6CEAA0831
EB02D41A9CCA33BCFAAB3FB2AEA308782851C4904F02C5ABE940D44DB1713158
DC2919C49AA2DF14BBA630C5ACE70ADB34A1AF996A465B9140EABC6A172D92E7
5C959D14C8F72B2C3A7DD78BD36B72B68E60F7C63BA3D1C5FC95C376E52BEDC9
7E1FADADC37E4B8A714A26879BF89AB4678AB6609423412969FC1DECD51E5B3F
A05361582C90C7AB5071280EFC3E597ECDE0884F0F7D41BA8AA71110E24E78A1
8E28EC3800E84FEFD709629A9B3AFF0C0CF48E21911AD1CFE648FD2401FD0399
AA0543E6C1DAA7F1FE10CDF6C00F8E4BA6A0834458FF10BB6BEB75488B4BC7C0
7722A0854465E260EC05AB224BAABE3C9A9A86D7B62C2D1E3E0A06BB54437D12
B44F23F5D501BDF6E7F1AE7934D6F3B792A1257B9FF5EB18BB80A6425EB7F511
65E0E2B12759D876E93E9FFC738C4966B1DC22F83F18A997054D54B445CF303D
FD961CD5057F44D52C1B5FCACF66DB19F976EC9D597C80FD855F1733F5F3BB8B
F9D5A6A65CBBCF318D320D06140095C6E91A8000D8892C6E5398F9F3A79199FC
7299A6B4C8069C048AE2D1598FE53D5286E34858DE42AFBFF0425A1AD439431F
F6EE52C5F1163185D5BDAF7E0F970A992F6BB03063D159BA4CB5DC15AEC0C2F3
5204D3C84FF819BDC6D5C3B0D924A8EA0E124E9806D9279D7B6F79CF8584BCCC
ECE06FD3253888136950E272F78DCF46C183F1951841466F1DDFC527DAA81658
42A4DDD4C376D4AA2EB06962FD51C46D904E519085C775947B0D8F6C5DF3C69B
375577D264EF65D1E2E92AE03A806E508A7B6F0602FB9491F352A5797B522E24
FDAA8CF92B4A74D6B713D2A0DF3A2C50108BD378598BDC67B63F79B33D3F32BA
8419B714C5B1676927BD0F44D7D0BE07680225415AD94A3B934EBA6EEB6BFEE9
722705F1DF28506C5EA0C021CF6967201B65008113BF5401458A9F79AC19A8D2
644F1465E4E11FA91A97F1C1414537CC9821EAA41AE8C1385F3D2E794BE2F9AF
C4D6559D16C9831CBF4FDE07C9A5020C339020BBE9C26B26635C3FA7E25C3214
4C9EB2AF2F908BEECFF25878952BC3D28F368DFE369026E1B8F72CF65CD24022
084DA690BAEE4617627BEC45422F7F5398A57E6A347CE0544059293CCA3EF9B7
8E1B6E1C682B93E4F2A78F73F7E74D8597862E27EAA111EA97B9861E897BD8C5
B32F2E08763CBD17C0DFF473C97DA0EA15D9B2B21F4C089C0F4B92C30C109AAE
A34055E83841199AB60B910F6BAE96D8169D5BA95ABD275EB53F23B182ADDAD6
70D2C2926A1E264FA7DAC041B5D69C6C9898038C1D1163C314E3E911AB1FE441
D7C76268B166CAD5FD140B5D3C78CD70A5479D4F30A00C36A05224F57ADF320C
FB2E79DD85999FEEDA33E010AB1B32FBD499C71F265781B75BFB7E6BEEBAED6A
20F490ABFE17BA0060B945859329A49138A0D1C51E0B52EFABF07ED0D6928C43
BEB086A040C89032F3A864BB0D713206DB66B7104536979B16D4D0C3C1B687D8
0E92DF209E29BC7F02FFEA2A4001103FFE82949E229B1BBEDB72089529A905F0
2E5AB8C50EDC121CA1ABAB6CB21BDDC68F274F47255A735EAA71E5494CA551D7
3FF660DCF6233AC2D131BE975FD810B804978C715A753040547C0ADDC3D56953
C552727D32F80230A1524D00B90099CBCE5133CB2E63631D0825E376FF0DC0FF
32D67379469371DDD86676B2B272CC74D2B18D88B6DFDAD13681600151D3EC76
F4B3416016CD7073F6470006FF3E29798AEBD50F180739A25FB42BEE63701EC5
8E8FA6E44A20DD1BC430B936E530B61981404A39FDB273B6EE60B7B0967C3B65
172238DF1F38AD8B72679409D963FEE42E374A99AAF4752FBB0C3DEB0CAA1617
D6F6620033EA85CF0A55BD205CFE8FB5B83CCE8624C88697104936003EECDDB0
4D5243564C413859342F433A3C9D5F23E5AA43FD82DD5BE2C1A90068B9A5A6C7
3A18A8FFC1260CE8955F6C2953B073AB609522CA55E41FEC2EA7EE5F549D6CB6
72C9D4D6FD61FF1A48838221A3FA7949E0A2F79EB10FA828DE6EC0686EF2118E
9A5A51A9A48CF1F6E0FAA90C048A0BECA79435801A29D5E536EFFC66F361EDA9
9D3418FD0435EAA094E9240C10D46487628EDD3878047847CCCB72C639A244AB
6CAFDA6949A394519A1D91F3B2980A8FD0032D7F1643B2ED1832FD7A86199813
E219AFA9FB5282DDFCD988F83A0289B529C21A6DD7B547DCD2A6972FD33AE3DC
C00D7C0F40EF8E942D435F5A4FF3A4BD93AE644716E835478FC841008292750A
37DDF729F2133E8AC21AF85C94829FCC02C2C1902253CB8F35CC4149C5085F56
3EA7904FBC82F21F2D990B400DB24D7FD217167E39CF65A8A58F5BAB49E0D23B
6B3DDB6291057B4B11719D076B7EBB3B33D9C86F374D7791042235540C6E55DF
313973DED6271E79E444CD78A597A816BBF4394A02A882AA2241DB2DB5F37E77
204154A7C6DB1625713B2B7D644B3C65380ADD65FE6F99FFA3F17908B4C04BBB
D089B189203DF7E3CBBA0665727B158C97520DAB1911F570D0509A47C68C7406
4AB79772A998F10E41900C2AB8BB1A8FC02418742C5FCCC704A7F1DDAD435BEA
F7E657C584C83F35F6714B81331A92F9AD59420BBF8A3E45B5C72B8F87369DD0
B8B99F7DD52FE506605D1D654B794E6904A7737CB0F185B38518B45690A5DF3E
57415388E818CDFF76B52D8380C5112F4C0C84C024BF5FAC60EE69A1048987EF
EE50A10ECA75DD3A57EA92154275BB7D50349779D516A6D81F422FBE7D7A6412
95C0C75940B1313167A516229709788CC0A6F7A5B1A5CC4C52E8A0F801BAFCF0
F7F28BAB3A149E6A4D4F07265C07A49C8D575D521C22C2100669BE202A55BEBC
55E62B5DF5F997A9CFC168376979D0A372010596F1543FAF49D94FC24A4EA440
2D9C62735C66461489AD6E8101B9100CE297E27396D8F9AB9CAC6E0B8B280BFE
E08718E54D5B03C3CEE73C6376F1856E71C483C6DB89795F695A6941DF123EE0
657F9C54D4EEA49E668256998B20467BB862ED4AD1602306FDFFC14B72CD2112
F6D8FC0603D4B2CCC9B7A36410C7486857CFA4DAC4D58FD4C3681FACE40CA22D
2CEBF3CF7030FF6E7689639FD029ECF1554315DFBF6A96A57F0ECA4683CDB048
7B8B85C8BEA869A5C6AF847005B9239844EFDDD162DF709DA01EC8F2EE4827F6
831DFC94995F49B5D7230529478D9B28CC351340B2C2005DDD22E10561544D1D
20D6735D106FD186DD9D36505D7D6CF738096FE9D2DAA873E1A87FA26BC5E7A9
10C0BDA8FE377E4914B00D445CCE4D0063ADBAA98B2B100AA66F091FCD96AFEE
193F5D432D715195ADCEA375DB6D347894FC929629AF871C3F80FDF5D2FDC21F
CB46E450D20013CF17738B951E15C6749B973722EB12FD90738C811E0AB5573D
B49FBA9E8972D965289780CCA9E0C8746F24A1E5A894698E0F4DA4053549A930
EAA60482852DA9745164D5565240BBA77EE502E0BDD96F35DDF076297F0DECF6
DC9C927764603AB6956739A84B6369021790C96BA29A990B8BE695971644BC94
3360A20B4BA5FF34CD9EA6F4F73743A3B3D9DEE9277D866AB84825D0BBDDCE50
370C08AE8EF13C46E17C5842BCED73CE1A57781CD0C7D12D087A2188BC928D15
A4B4B64BD1950A47693209654EC686923B58739FE53B3588C0CEF3D89F5E4433
0D96C10AC8A119F331F62508CF1B25A89D96A871D902A3A4BA94A3C525A750C8
5B4A753951B1225FA94B9F5CA455D676DAB7208951BD8ECD33C4CF90E3C27B54
7A95BF1BF0D65EC8D71C1A4267A0A7345686BAD5C96EC2F59AD7586785F6DCAA
D70DB46083A8C05CBC51DDD5AAAA2FB916C8704DD18F8884A6D3A436DCE2991F
BD1543B8C460AC6FD8C8EFEFE699A54AEF33548A42DAA1278D5A5916BD327E9E
8F2AD77634B1718DBFC38FD3B8D02E9D0C8B1909C467CB5EE078FD943582EB05
4B1518E7D3BACB19DB87D3B285C462314D0A8022EA6BA0FFA200FF9564D0F073
1BA5A097933B4CF14D018548428B914798F36040B9926E6A7AF094A1F976DA85
B3E04E4E69374A139841D155E827E668A418179B55EA50DBC3BE41587314457F
E47DE6E511BC9519DD790738669D7388A87603038AFDAB43DB2C2EF00B7FE2B3
59B2546234086E16E141B1F7E9B9FF21265ECD11D5C3A197ADC133C166A34C9A
ECA46029443CF87EFEB9A2F54A5F2E8D9E51E6F23AA38D4CBF91F7B8E3AC3CCE
FDC2FFB036DBAF323ECE81EEAA82FF20C935EA293E909ECD90199DBB723E1816
9F83B658F37C657C5FED2F76106C8130AAE4F7F04FF6EC7A761949F63C636F25
1E09EDA0E3B9D9C2EE51972151C8AAF0769AC882FF5B705CF74DE26ABCEA12DA
C31E8E7232F7964A7AEEAEF1BE59B26E3918F3235FC6891FE1A54C259E6B78A8
99A70DC8848152E9F17E37D6C3EFA8829CE3DFFAA85D1356A21D850D1CD9BB22
E1B00AC2291A9C09C594480D0D27EB9B75678E6E2CF352FF2F11AFCB5BAED320
52651AE2A2FE409D11AD241FD10E9E1B9767AEC588107D8CA807CBC3C346862B
C05A1D335A95D08E57657391EEE76D0390950BEDE4231F55A3D3588080CFE6F5
904E93155DD130CE027C72915B9928949EBE8270612E8AD591AA97A34587E643
4AA9EBF42007FDE78C5595F0D04193247723928F14A31DFAFFED121B3823CB85
B1348E9C7CD6E1DC97FB5626BBAD58087AB60AB735D2E97C37FF22DD1D18F0CD
6276AEC7478DA0CC8D8786C55D011E2B184CEF0A95C199DF47A95F9F1AD8DC29
B47B3CC63CB7EF25382B4FD9537350572594F4C64C5977B451DB4718D897A974
0CF094BA10B062A4DE05C7CD145126066044E4EF404A27E58C56FA2810E94E1D
3CFC2A3975C1DBB7DDE85CDD9F20BA62FDCEFC3F0751EE52D778BD5E26B7F55F
9E42C5C7F37ED5356C7FCABEC163E338763F5AB7865BA35DC781C4FAFA296BBD
7D55EF98B3540535D35CB8D8BCA0E8971B46CB3DA4281F9174631C7CE14764AC
B9A5EA725767073098E02468E26883F09DFD2E77FD64D18355354F74D4126C53
A0C860D0CD2BD90117856A1C0879CEEEDE5B02AEF9294D3482BDE4C4A46C883D
DEE38ADFDD023E2D2E7671C80010E251E435FBF9A8B6EDEFE321C30642D500ED
BFFA980336FBF8343015FEB51ED1693BD05739DB14D3247D0E8689FCE2FDB2E0
7E61D5CB9E4B7817B9AD16EEB53132FBBBF8B4D38A3F8626937B997CFDEBAC31
E26D1A3CA9B6E01D02526B3E03BB2671FF607CFF22E96F62E4F1B8DC5EEDEE24
7CB0DE2A6C127EE0F17FF6D4C596D7AF6D3519B11D2E209A16487327DC3C1D42
4988CFA23AA104BC86F62DDC776A7C0794FB3BD55909F4535153B2C254B1A1AF
344D68093D5063D1987BBB024D7C665D8513EA165FCE0EFF7A3F61A7BC0DBAA2
FDCA8DA4964F4BDAE1A4206B4AA3489192F5E5B70F69EB09F556B7319A96824E
C399BB8E5B26813CD39F737DBA68858336FD7F44060B4AC0B868F7E5C6D4FE67
A3C099C5AF24EC273E90925496E1EE8CF118AB6BF54B67FF9FDC2850C9E61321
15CE573DD1DC7458A778A9761CEF6C7836E81DFB70105217D1E7AE520FD741B9
2B708604C190D4E9A1EB9CC3B7C2609239F96BCABD8F1E2A9195F94A7CF37F18
70E3EB2273CA769C273BDE97AB8B072CEC20C18BFCDCA3ADF644D5399B3B5EB5
06A8EA30D63444E62893447CCC0885B268FC9631E8453E6ABB12E9D92F37FDAB
735FB3A2D239BFAEDD8031A7A6AB62F57CA165F66CE790DFBCF2DBD74EEBE845
C949571BFB14510EF47559147B9CBA5FAFB54D1B1C4A0D56DA5E74191F2A64B1
DBBB9063B4EC8E129E44E5ED3A2BA43BA906FE81DEFD283B5531BA0476FFA1C8
AAA61CA5A82E6F254BB9D150F4C19970812C2C67703F733070892A64ABE5B261
B039E40E8137A2E01B8089D233B6E4168053479CEE9C98251BDA130D04D30EBC
06B6EDB128799047BDE3884AD1BC07FB8D0A8D1E8051AC369546CFC8764B08F9
C8472B15CC60A88FBB8CA025C2EDF24A44AC3FE2D6DFE4046D5E2532C99028F0
F3E417321414657F42D395766F5AA3CC8F01DF0D7931CAEFE83F295DB1ED68DD
9A258156FB30BA45C437A3DD8E57C4D98DBFAA3C5B76E3E937D40F379CF11B54
A495830CB91414D662E2B495EB1E70F7737838E313E2A43801FD68B79462B9C0
2092E75124C020A9D12849A7126FF3F71505912B1A981507207BD35E13A9522E
191A1053E33FE823065E4DA88F2279B20598CDDC51D01EDCEE8D194994A690FF
0E40572D953D5E97C84D73CA1D4957C2A636D87A2D9AB07F02C18BB9DE39274E
BC561D9F93FB0755B6F9DC9B48511B8EDA15445A7A9B46FC1367FBFEC0A4BE4F
30E0B93FADDD7E32BACE544534AD929980D37AB526310E7F314E61FC1B01F393
434E3F1C4B621562EBF7A8A951C04E8266531C971120A123CB112956E6416B69
CC84D6834040D649F8265967645A8C9D4D44EE90479A312DCE6D8D50D29C2D0E
8C080FDCF1594FEC3B9C30FF7F2B77E7671F845D83E41B05033D50C8C35B0922
455896164B0819505E1517356F080CDAFBF920774C4B123B7B75C2BB8462E5D3
F4CB856B2A4288CF2B44827D0450D50F5180F63C5F8F6E73B35490ED3905BCC4
0F4BB3BB98FF63F52E53419B42D3193877B8E8EB532FF91A69BA683D4AC72BBF
F29297ED6277CE88B8AE7838D34D07F892D021D9572F47C551A1B8B4E56AABF2
65FC8F24BDCE48B270EC3C73214922A347FDE1978FE23F370956DD034B9F3DBE
4E57E18A4E2511382052B5FABCB1A1EEAF8AE191B7AC8CDE796B114C262634A4
C259CF501196053C20B94536E028EB473316449BF98C4B52BEA3F3E1AB295331
78E9606FF23F4FC027CE47946D07DBE13B524084F0CDC2E6D57D8A24FFFC4BBD
6B61C6F5C9AF86196942A75B4CD099660312F1D97064A280AA39F9DF0FB7E39F
11476ACE63788039C951F0115725B5F3E27B0A0CFBCA74190883F333D76A43C1
ABBBDDA82652A66862307F85B465595E8511313C90250D777D003C6565CCD4EC
00516A877615ABE01A5000667FB8FC309E77BC48D1F9F4196E2AFB9082A45FE3
5685C207EF9C19BFA1413E707D0F581614BB62D880E1527AD31467979AE893C0
130C8058FB420777E99E4265DF30CEC5118755A7DD145689EF65CCB1337FAD86
D01B9F8034B8A71DDAFB95A82B515B00B9D98C36BCCC45720F6A9CFBC07ED870
DFA4994AD8C708FA470F5A1CB6BE4E620E647E4FD8FB41398294F829EEF3EF0A
D94178A30C88FC573016B657372252449B03006A8564929337C55FFE6AE449A0
D07476DA2403D4A24918EE0AD45FE844D23D79A8F1864A9B06DCD0A1B3FD118A
F1A30312B7B84329AAC6F45039FB3A915150601B44F64DBFCFAE5C4EE17B8930
8CE315F20E6933B0C5EE6E1196DDC7280E6CB2B7C02D5D1BAB36A81570E5C1D9
8DC568EC5748322DF3DBD732DDE87ABFABB4407EEB13C2607643E2822BFD2E9B
19CF713438BAD0379E640BCED22B3634D2FCD0902EAE192DF48B888EAE7B82F8
5066B243CD9EDDAFBB118FE7C89E4BEB059928C39A749A4E8B397247D4CA9C68
2EB258CEFADA4441DA8A6FD12B9A29D1D7A7063B0F4FDD292ED5F228D4DB93DE
9015D2B20A1F0A7AAA29D523FFD994DEFED145045281252769B4B21734B5CF30
A35D2BB9BC10BCC87BA7B182B856C4791A17875F9A446D4396F214F4D0DBF4DF
674246AAD73BC84EB7419803D5EFF1949455439FEDF36662571FD7EFA7E7034C
0BE89BF47C7D1DDDAF1A90967346BF5E2EACD32B401937B3E3CE2251319748B1
C4DDD4ADAAA2A71DEAE4DEE5642C8991
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 19 /acute put
dup 39 /quoteright put
dup 45 /hyphen put
dup 48 /zero put
dup 70 /F put
dup 82 /R put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD6DBD2817CD57D7CCC2FAE2B14257C7214981A0678BB213832B04A68AB3631
8B23CA966781ABFCBD46714EEDB6F54568E2E17613658D4F62AAE1B2B4732FA8
F3F9BB87D30D771D591B8E7F59EC319B3C80C7DDB03B26C4A34300BFECE03FD2
8732CB57F2E95555F4EBC6F97D187D7F7BF406499A2B12B953D0AE1984D78EF2
399E862A24DD788C8C23E5A620F4FD4BDD641715A50B543CA1C4DBC2B2F72F6D
19FA0C4EFE4E73FE9669F35AADCBCF96948C6A0F57223555F70B4116FEBF8041
0BD4880F03360F1941FAC5C1D667DE026D09B02CDF8A42372C1A9AD0DEA73BFA
041447E2E3083C182AD6142C6E860B7C83C12D395863DB30452EFDE8E60CB237
44D9EDCCF47DC58B8D9F6171854B27E61664C83BEEA0958198AE0AE0E053D99B
A95DD281AAA4E0464F52F3A71C5F9D6A9FC83BBF42B2380FB78DC8BF95B7AE63
A1094483E6420789EFD2C03414A47813C3E7D86C091A3FD85060330600B2EE18
624084311BB10A6AD36445C29374D76DA1237A4F3C7AE6183632805BB089B7CD
1D5E5A4F53594DB6054321A98DD7022BA15BF5CD23D66AA210743075746E0BE2
A18AF76DB40F00E861E47E93D9E720EC44144B85CEE6FAA3EA1D76CA48122F85
B16D2FB1DFB267D27D6B7B5F8685DE85ADA53FE3FABF8893E5E8FC0CC4A1212A
3D2AC73E6E84099877F94D42F59E31E01B2982A73B4719C41637087F99F8208B
5EF77637256C6A801B16C870D01BB20C72B0EF5D9FE716AB220F0D37781992C3
15B5E6FFC1BA073F37E56E691E80F1096EA9B72034D8A700C2FF8099BD5C29C7
ED25DFACC5F0C0CA43D204016F2C6A42BC2507DE494A6C06B0943AA39B74F56F
31E65587E29EB4E4AE6494CD1196021600053B1A8A052D159397B918C9A2E98A
81A24BDE6D0EF4B6D0E22E6618C67574B2402EEC0FE2F03B1A218E6865D52259
36B1693A84721346741D8BC7337E6C2C50A1C7004D9576582758C0BD9F07A9D0
0A6AD060D53ABF7569FB6331C4DB98801F0D3764780499D41A6524D8232EC953
99FBF96613E081603414D8E80BA9CB14B932EA5E25C1D6D01214B4734FE18E9B
8CFB8B13B1B3CBD38D6712C9E888388465ACDAA8EC13D540ED86E6D31408B977
96DE6839C589B83915D321DCB402454BD9A5670F83961BB259A768A2F962FE86
DE4023850EB0368864F50DF3AABFD12CFB700A8F5FFDC192389BF1ED04339A3E
51578F4A9D735F904DDEAF611B04AC903B8D65DEAF591E8B4439DF6BA2E11F15
D300A9595D3A0BF4A36B22AECD19171600B93CE1D2A05285C9A8D7045A8C3563
3F61A2A207C062259A0E728C53208F3C1F93C919056DE9E515F8AAE3223FCCF8
5DB7A1B8AF05C4A7719BEDBC9939D7A68A8A3EB7F5340D52A8A638F7D8BBC7E6
751B4EF814FA0AA95A03738B0278C8BB4E2A98C2678E4E92FFF6413D2E6C154B
9758659B6C9ED0BCA0523945B96BF5212F77471A6B7456E7774A8501BDE32866
47F1A88BA69EF5BECFDDC59F0E451753F552A2CC9EAF1E98BDA8A0D05C221C01
3C0BD59D6E0A3137527631C3EC9FB846CFBFA2AC2E58C6D99CD6FA826F15D4FD
64B74781EB56EF1C9684B0458FA002528230152BCF6519DAE98A12CC1C168F85
94B4B6AA956D182F98E0C1D30AF2F4B6E1B36908477B625D0380DF77D30B1A07
7EA372D65100664D3C5E7AB23E58DFDFC8ACDE325421C44FE9F3E550A129329E
C2CD474F6DC298EDB82FEE40B3D9ADE9098B1D078D88F2E19EE775CBCB3EC6BE
A33682A6106D8A4E2B4813AE7CF27A27EE8CF3B65AA67171C6DA780AF388D4FC
4180B0CF9C549F2E5D906E7A46385B41F664B3C5ADFA744B931617F41F82C600
416864233134820CB6C528C31EC48D51E1158398DB98B4BDBAE9E70E9139AE12
A214B22AC9B892374FE713E4B3E1E3372E82D0F31AFC172AD2E5ED14C938C8E7
2505EC49F96CFFC36561F876E6B452E4F1B96CEE6725B2E4DAF3EEBAD1542B49
635AC854E5C7C9FF7B8D6703BCB81FD28E7E41C66CAD5D0C5738FD91A1A8AC64
87796AA1A55E9A0B59693F7E1E3E62915394B69F8AFDE6801316E7D861E4D4F1
609245B967DDA2E9D03D51963E3224D5A78E5FD62E4EFB254DCF390743E65306
9B8CF442C8AA133BF5074045CD37151469CC44E0C1F7EA24481EB2F18190A14E
1034555BAF1656DE017546EB6DAD26E7598DB2DBFE0AB74858AFD0195847A220
DE5CCD8C4CC4FE756E6DA6B3817104946CADC166A0BE4EBB6DEEDE4BED87F702
99C39A4B6F4815789879BAEE56BC164286F77E57A17F801BAEE069AD267C462C
D2516A908E0461ABEB5FFECA8D4E28D3C53F47FAF84A2F01C6B8AE1F2FD805AF
8BD94E2F8F2607FEE1105175B3E7274BBCCE1D10477C9E6ADD3ACC5EE7857308
DA67116F9B0A5E2F437FB5B4205A595F43C88817044A8A9A2A5ADB6D5A461CB1
F4E054C7122158507C3B3DEAC2BD4199DDB6FD6BFAF5F6752B7261BD875F96D2
660BD5FB7EA4A31986524CB68C1245AC90E11E4AD1C9D959F305A21030CA2577
BE1BB24051486F33D415E12059165BF61715C16CB9AAEE56FF75DA7DD5C3C5D5
B1BAABA3F67D9D8410A86974039C447787FAD2733C4F70F48DE233668C920E38
ADBAF8A584A272FBF63B25F3ADF27BFF63FD17A1D36FC06AA2211444276D1573
88B2D945D2E52D4864B93A8752635B3BC9FC285647ACCAF7EA48D9831A9EC0D8
FAFA756B3F4AF5797D3B062A140CB00F0C0B938E169618F35D65D6F8D2701298
CC9F77275F403D302C6131309896669F2468E70244DC747CD101E71786724E77
56BDB803C0A7E33C2439C20669C3E953802EF5987B1EA6EF30976F904BDE80E5
6C9B7F81E071F5FC0659530C4A27C259B58B0C2C05513C29E5924E0E2B67FCA5
8A20D586519CAAC2E2B04BFFA71BCD786E93079B906B2BC1B0C4CE9DA87ED925
C23E4962F9CDD026EF0CBCF2FF8D6783FA034984C6352C891B420C7A14A01C90
F3000044FF15D03B6D47C1BE3A14431082C7EAC20C3D2E5DD25CF4328538CEE7
022AD8D2FC1311623987A3A2607631B000171A90E6D96CA42F076D92F9292143
33F34681A5DC81707CAF47A3D9A214CC80D7619FCF8165C9C850AF966AFBFEAD
3EAD80BF93DBD2EE6984D20C14AF91D2404042713C8CE3D97502D80A7A41F687
83FC6B2CAA75EFCF0195C950A7B601C0340ADD4F6E60BEF1538D8842DE4A8C27
04F03C1C98B1DE21DF82A3E0A4DE6AE6F4A80678DB6DD0670D523027C722DD2C
BA81E840855FD131559ED5209915E9ECA59306D8569CEFCFE19A1965B0F839F4
101F312F6E978DF7D2B2549B9FA6183FADD980232F0E1CB729FF49D0EA2FB8A0
CAAD43F2DD3E085F9921FF2DAD5C1F58534C1E0AB72F4C7B2FD6392533A9D39E
C0A6AE33059BCA898207A146AE197CAFB967BD2D36FE01A7DD15F5D86B43678A
9660CD626BF177B659310C2BC81F1D5EB1BE26422297182A5E8C14817BDADE1A
29E38B5E36E62948B62028F860F67684E4A0B2128DEA6ED6C4A87D3CF9EA246A
DE3C1A64585B2423097F84A2A925E42C139F9A8FE797622A6B967331EA333546
0968A9804C5977E8564E7D1B6654859AA3E510A49615E70C6B6059E7CB4DA089
13162E004D44F533C9129467F28EAA9484DC6B33A0A649CEEDEF8DC018E388F3
C9510A69F8A6FFC5503C76E383FF8B107EAF224DF41A34B8E03C543967949957
D5F483A49777352E4903EEB82C75F599AAA9D8155098A81E8CB76A828F4D61DE
EFC0780F9C5962E8BE7947C65CECFFC7EF770D87FEA17F239106CBC51C2F6D68
C4811C673A1466D7971649DC9608448DF6FAB8279ED60585EBDF9DF95D902431
7071C48F6FD56AC76AD60516B311351951BEBE53EB69CA4C0DF3461E99CD262F
9A5170DD1AB1808317FCF9213EBF845A280E6A2409D530F020214F3F05CB81C2
38C299C34943BA2A5DDE329DF73D625C6DCB31DA3F5222869F8780DE8A27DB90
17441875A11A6C33AFE9FD2180112213CA776739EAFF433907BD9837CCE79A20
782437B6C9A726EB83C52A012A7CB2AB45C61FABE58026B32741FEC887F5EE09
0E2F752791C03ACF1C42468612F2F74041EE5E6B4AFE3A6017205B6B38B4024A
8C0DFE90BD2AB495F08ACD4A46973D73911ED7C1F50B3125B35AF38837700D4E
DB05017EA2686B89F09622D5B215A026E5578EF75F3D8CA2B3B6063D99A3DCAE
8FDD3B360359467439AE785076D12DF5AD973D8B325566E7B159C6F4F5B389BA
4FC4B281CA745545B9E7286DC032A09644BF36E0486680721D5CCFA58A77658F
2E48A4766F72FD4F80E77DFDD20D7E8F56C52A9A41D5F6509D54DD6D74983CCE
D9DB8DCA7AD4E0E152E5EEA31F258D34736A576FFB807334AAE5AC67784BC668
A81B675AD1B3F546BC73D7591C93CBF048FAF9B681E807B806E5E36C7BB318B2
A4A3CD8E3CD7957DDDC28DB9E2F26F433343E894537FDC078CE98FB795AC9663
0677494D34575538A1E6BE6FB53B907369CC3583342CFF87A06A3B31A16407CD
24589170578CCDCF9AA6ECC3B008C32D00AB747068F2FE6BDE6CA5185241075E
68CBE3314F529EBD9F8D6DA3B137B76B511CA77A6347906A93B81B9DF1960982
537C5D9E034BE7421FFAC6814D3F015E57B8F6B6BDB2D3CE590FFA9D82F1A06C
AFBB2099056A10CB652A5199AB02A8D01F5C67FA6883D426076603AA0E49ED60
F3029478F343DE029BAE456255D8D6191E7BA996EF498B68DC1CC593107BF1E9
68937945009A652B164066EB3ECE4C4B28DD88E768562617B8CEB8EE1D43A87E
92ED55250BA07852C6F1FFA6D08728DA3D95AD567B98226B38EEA0F036F4D883
08B591C1DE68A9DB2A6B9F897A9202A1CAC4FB0F10AF14F6C66CA55471FF8BE3
9A56557260D6D84BB2B0153D52F25241BB77C9F63333F93B581F27FCFF0A7249
2DF1AD1260262986649D73A57A500CD605B91DDD9943BB8393EA437507B3FA8E
EA3E6AF61EB50228D4EB9F0064ED92B6153DADA230C918793B7A263872E46292
1F74E37209C499431AF4C988F755D4DDE0DC5FC38A50F0869BEFF1CDDD505E71
D6BD859E29158315819227407CE05DF2D1CAE69B56C9573D5B4E0FCC622BB066
A3FF381A0D66F93D5F9DBC6E0C6EFE455C98DFB637FA524CCBD284566172AF34
43B68601BA2C5A8F8D804A5DF4D417362E3B0213440BA125BDD9B4667EFBC5D2
72643B36B0541D197010B296D3EB0BE2BBF386B9DCC720A7D5A79D406C0604D2
E0771877F605F27D1F61283911BD98D37ADD14E2852A3923357AF437D993F839
410F15459EBD4C244ACE63CECF36DE0F6161D4102397341992307EAC1CF829DE
C8DC5278F0D430CFFC842938E8F5D11A644BF3E94B023EE21F3206641C016973
7D1CB05DD6AC16E5B3A2A7EFCD11B058A209D3926C828C2D3E2CD5864807AE86
8310C723F606A71DA77919206BA8E3E2392E929EA5A55F6EE2C1BD9C79193661
B5E1B2152B8B9C8490F122B2D15A29E1AE99B20680BFC72B22F90B537B5421D7
0C601E2A925C48872B8B45319B9EA2ABD1BC7F921225E3F9A2AECA65CFDDBE43
6795EC40C85C98FDEB526C7EF8BB2FE27912B6F3942E6905DE47647A77533A74
9F8FFD7CB80AD4DAF8A14DACB8E5B14A5B16380714EAA14C09ED4E4EF3DAE0BC
626ED3489632B98828C0B5072C5E7BD9B06A044937FCBF85E8A0D86732C01DC4
065E94726ABD507826AE3C493BD84397D95D185616157E6C2C3FFF03F0FF668B
DB20497A3A93A368396364100A063624514B95EA3633B8C4FF08DB098CE8E932
F15D45B619FDF8367A8E6A9E9CE704FFB592E922BC9F92386F7BB35479F8B04B
C904B039C3652E55CB0892F01593A66070EB10F08ABE715B4712A9C9B0D88ACF
6C7323CCECF8FE50614C3E77BD4B0A4BF1812C032C5F0B1333B1047AD4DCA12D
6E9E1D8F1DD81AA0FDE87AFEC3A59EFE6456D143C8A95D23CCD4F166E561D1A2
8F07BF3E51CE695937852F7288A09C24B898D53A146FC48D5630F658E8842CB8
F51BADDFF98B9C244A805275EBF186DF426D56F22FD02BEB1CEC10AA15319082
6213AC06191B3B3AFE5F57B7518151F7A5795D61A946D0607AB4B671D8D67D38
A2DE83ABA7979CC731E4C49BA40739819B3B5933ACF628E6E76CD1AB9FF5AC55
3843E0F8C0C495B262776C7C1C1D5A3AE3BD82D84D4FBC901EC3EC8FB59030C8
136AA2F53AB4083E29B5AFC9234614CFD2C1707461116D3504F656E13F78FBFB
53A9AE1881944F8735D41FD936EBAD28D7DE3C7F43DF8340DB8A95CA8AA951E9
91C57B6BC81925A2E38CF7BC8D66FAD4F5DEB56D7DBBDA965C8BCF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(H:/Mes-cours-2nde-mis-a-jour/Cours/Chapitre-vecteurs/Exercices/Exercices-niveau-0/vecteurs-niveau-0)
@start /Fa 143[1010 44[638 66[943{}3 1212.12 /CMSY10
rf /Fb 222[960 960 12[892 892 18[{}4 1212.12 /CMEX10
rf /Fc 157[520 641 16[778 925 1[1176 2[672 533 1[953
779 895 1004 866 919 909 5[337 337 58[{}16 1212.12 /CMMI10
rf /Fd 134[640 640 1[640 673 471 478 475 640 673 606
673 1010 337 2[337 673 606 1[539 673 539 1[606 3[337
1[337 7[673 1[943 1[943 2[758 7[926 875 3[572 3[337 337
2[606 606 606 606 606 606 606 606 1[337 404 337 943 1[471
471 337 19[606 606 5[673 707 11[{}50 1212.12 /CMR10 rf
/Fe 135[736 2[774 542 550 574 1[774 697 774 1162 387
2[387 774 697 1[639 774 620 774 678 27[916 1[1007 8[387
697 697 697 697 697 697 697 697 697 697 2[465 5[387 19[697
697 18[{}35 1212.12 /CMBX10 rf /Ff 135[824 1[824 867
607 616 607 1[867 780 867 1[434 2[434 867 780 1[694 867
694 1[780 10[1170 3[1149 11[1019 21[780 2[520 5[434 19[780
19[{}24 1594.02 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black -3276 -6425
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -3276 -6425 a -3276 -6425 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -3276 -6425 a -3276 -6425
a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -3276 -6425 a 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
-96 -1562 a Ff(V)-130 b(ecteurs)519 b(-)h(F)-130 b(euille)518
b(d'exercices)f(niv)-43 b(eau)520 b(0)h(-)f(R)-43 b(\023)-737
b(evisions)518 b(sur)i(le)g(c)-43 b(hapitre)519 b(rep)-43
b(\023)-737 b(erage)p -473 -3002 51088 45 v -473 -898
45 2126 v 50570 -898 V -473 -876 51088 45 v -3276 2629
a Fe(Exercice)464 b(1)g(:)h(Co)39 b(ordonn)-29 b(\023)-668
b(ees)465 b(d'un)h(p)39 b(oin)-39 b(t)466 b(dans)f(un)g(rep)-29
b(\022)-668 b(ere)p -3276 3059 31842 49 v -3276 5087
a Fd(On)405 b(consid)-34 b(\022)-572 b(ere)403 b(le)h(graphique)g
(ci-con)-34 b(tre.)-3276 6593 y(Lire)525 b(les)g(co)34
b(ordonn)-34 b(\023)-572 b(ees)526 b(des)g(p)34 b(oin)-34
b(ts)527 b Fc(O)34 b Fd(,)525 b Fc(I)95 b Fd(,)525 b
Fc(J)117 b Fd(,)525 b Fc(A)p Fd(,)h Fc(B)61 b Fd(,)-3276
8098 y Fc(C)87 b Fd(,)404 b Fc(D)34 b Fd(,)403 b Fc(E)70
b Fd(,)404 b Fc(F)572 b Fd(et)405 b Fc(G)f Fd(dans)h(le)e(rep)-34
b(\022)-572 b(ere)403 b(\()p Fc(O)34 b Fd(;)202 b Fc(I)95
b(;)202 b(J)117 b Fd(\).)-3276 11109 y Fc(O)34 b Fd(\()1890
b(;)2091 b(\))7108 b Fc(C)87 b Fd(\()1890 b(;)2092 b(\))-3276
14120 y Fc(I)95 b Fd(\()1891 b(;)2091 b(\))7108 b Fc(D)34
b Fd(\()1889 b(;)2092 b(\))-3276 17131 y Fc(J)117 b Fd(\()1890
b(;)2092 b(\))7107 b Fc(E)70 b Fd(\()1890 b(;)2092 b(\))-3276
20142 y Fc(A)p Fd(\()1891 b(;)2091 b(\))7108 b Fc(F)168
b Fd(\()1891 b(;)2091 b(\))-3276 23153 y Fc(B)61 b Fd(\()1891
b(;)2091 b(\))7108 b Fc(G)p Fd(\()1890 b(;)2092 b(\))23583
24531 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   gsave  1. .setopacityalpha
 0.8 SLW 0  setgray 0.0 0.0 273.14722 182.09814 0.0 0.0 22.76227 abs
22.76227 abs 1 10 { 0  setgray } 0.0 /Helvetica findfont 0.0 scalefont
setfont Grid grestore  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 273.14722 68.2868 0.0 68.2868    /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 136.57361 182.09814 136.57361 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
23583 24531 a
tx@Dict begin { 143.40234 143.40234 } PutCoor PutBegin  end
 23583 24531 a 23128 24945 a Fc(A)23583
24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531 a
tx@Dict begin { 97.8778 75.11554 } PutCoor PutBegin  end
 23583 24531 a 23093
24945 a Fc(B)23583 24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531
a
tx@Dict begin { 129.74486 38.69579 } PutCoor PutBegin  end
 23583 24531 a 23106 24945 a Fc(C)23583 24531 y
tx@Dict begin  PutEnd  end
 23583
24531 a 23583 24531 a
tx@Dict begin { 234.45142 75.11554 } PutCoor PutBegin  end
 23583 24531 a 23064 24945 a Fc(D)23583
24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531 a
tx@Dict begin { 52.35327 166.16461 } PutCoor PutBegin  end
 23583 24531 a 23101
24945 a Fc(E)23583 24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531
a
tx@Dict begin { 129.74486 61.45805 } PutCoor PutBegin  end
 23583 24531 a 23280 24921 a Fd(0)23583 24531 y
tx@Dict begin  PutEnd  end
 23583
24531 a 23583 24531 a
tx@Dict begin { 152.50713 61.45805 } PutCoor PutBegin  end
 23583 24531 a 23269 24945 a Fc(I)23583
24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531 a
tx@Dict begin { 129.74486 97.8778 } PutCoor PutBegin  end
 23583 24531 a 23189
24945 a Fc(J)23583 24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a 23583 24531
a
tx@Dict begin { 40.97214 29.591 } PutCoor PutBegin  end
 23583 24531 a 23109 24945 a Fc(F)23583 24531 y
tx@Dict begin  PutEnd  end
 23583
24531 a 23583 24531 a
tx@Dict begin { 186.65053 95.60146 } PutCoor PutBegin  end
 23583 24531 a 23106 24945 a Fc(G)23583
24531 y
tx@Dict begin  PutEnd  end
 23583 24531 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 136.57361 136.57361
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 91.04907 68.2868
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 136.57361 45.52454
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 227.62268 68.2868
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 45.52454 159.33588
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 136.57361 68.2868
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 159.33588 68.2868
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 136.57361 91.04907
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 34.1434 22.76227
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 193.47928 102.4302
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
-3276 29285 a Fe(Exercice)464 b(2)g(:)h(calcul)f(de)h(distances)g(dans)
f(un)i(rep)-29 b(\022)-668 b(ere)465 b(orthonorm)-29
b(\023)-668 b(e)p -3276 29715 36083 49 v -3276 31736
a Fd(On)405 b(consid)-34 b(\022)-572 b(ere)403 b(le)h(graphique)g
(ci-dessous)g(:)1291 51100 y @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray   gsave  1. .setopacityalpha
 0.8 SLW 0  setgray 0.0 0.0 199.16824 159.3346 0.0 0.0 19.91682 abs
19.91682 abs 1 10 { 0  setgray } 0.0 /Helvetica findfont 0.0 scalefont
setfont Grid grestore  end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 199.16824 59.75047 0.0 59.75047    /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 79.6673 159.3346 79.6673 0.0    /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1291 51100 a
tx@Dict begin { 33.85854 105.55922 } PutCoor PutBegin  end
 1291 51100 a 836
51515 a Fc(A)1291 51100 y
tx@Dict begin  PutEnd  end
 1291 51100 a 1291 51100 a
tx@Dict begin { 125.47604 125.47604 } PutCoor PutBegin  end
 1291
51100 a 801 51515 a Fc(B)1291 51100 y
tx@Dict begin  PutEnd  end
 1291 51100 a 1291
51100 a
tx@Dict begin { 165.3097 85.6424 } PutCoor PutBegin  end
 1291 51100 a 814 51515 a Fc(C)1291 51100 y
tx@Dict begin  PutEnd  end
 1291
51100 a 1291 51100 a
tx@Dict begin { 53.77536 13.94171 } PutCoor PutBegin  end
 1291 51100 a 772 51515 a Fc(D)1291
51100 y
tx@Dict begin  PutEnd  end
 1291 51100 a 1291 51100 a
tx@Dict begin { 73.69218 53.77536 } PutCoor PutBegin  end
 1291 51100 a 988 51491
a Fd(0)1291 51100 y
tx@Dict begin  PutEnd  end
 1291 51100 a 1291 51100 a
tx@Dict begin { 93.60901 53.77536 } PutCoor PutBegin  end
 1291 51100
a 977 51515 a Fc(I)1291 51100 y
tx@Dict begin  PutEnd  end
 1291 51100 a 1291 51100
a
tx@Dict begin { 73.69218 85.6424 } PutCoor PutBegin  end
 1291 51100 a 897 51515 a Fc(J)1291 51100 y
tx@Dict begin  PutEnd  end
 1291 51100
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 39.83365 99.58412
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 119.50095 119.50095
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 159.3346 79.6673
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 59.75047 19.91682
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 99.58412 59.75047
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 79.6673 59.75047
  false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 79.6673 79.6673 
 false NArray  /DS 2.0 2. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def  newpath n { transform floor .5 add exch
floor .5 add exch itransform Dot } repeat  end
 
@endspecial -3276 54222 a
Fd(Calculer)g Fc(AB)61 b Fd(,)404 b Fc(B)61 b(C)87 b
Fd(,)404 b Fc(C)87 b(D)34 b Fd(,)403 b Fc(D)34 b(A)p
Fd(,)403 b Fc(I)95 b(A)p Fd(,)404 b Fc(I)95 b(J)520 b
Fd(et)405 b Fc(J)117 b(D)34 b Fd(.)-3276 58738 y Fe(Exercice)464
b(3)g(:)p -3276 58932 7144 49 v 404 w Fd(Soit)405 b(\()p
Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b Fd(\))403
b(un)i(rep)-34 b(\022)-572 b(ere)403 b(orthonorm)-34
b(\023)-572 b(e.)p 0 TeXcolorgray -1794 61316 a(1.)p
0 TeXcolorgray 606 w(Soien)-34 b(t)405 b Fc(A)4536 59607
y Fb(\022)5428 61316 y Fa(\000)6504 60496 y Fd(1)p 6504
61037 607 49 v 6504 62147 a(2)7647 61316 y(;)605 b Fa(\000)p
Fd(3)10138 59607 y Fb(\023)11435 61316 y Fd(et)404 b
Fc(B)14031 59607 y Fb(\022)14923 61316 y Fd(5)g(;)17009
60496 y(1)p 17009 61037 V 17009 62147 a(4)17748 59607
y Fb(\023)18640 61316 y Fd(.)g(Calculer)f Fc(O)34 b(A)p
Fd(,)403 b Fc(O)34 b(B)465 b Fd(et)404 b Fc(AB)61 b Fd(.)p
0 TeXcolorgray -1794 64084 a(2.)p 0 TeXcolorgray 606
w(Soit)404 b Fc(C)87 b Fd(\(1)270 b(+)5758 63081 y Fa(p)p
6768 63081 V 1003 x Fd(2)404 b(;)606 b(1)270 b Fa(\000)10809
63081 y(p)p 11819 63081 V 1003 x Fd(2\).)404 b(Calculer)g
Fc(O)34 b(C)87 b Fd(.)p 0 TeXcolorgray -1794 65995 a(3.)p
0 TeXcolorgray 606 w(Soit)404 b Fa(C)475 b Fd(le)404
b(cercle)e(de)i(cen)-34 b(tre)404 b Fc(I)499 b Fd(et)404
b(de)h(ra)-34 b(y)g(on)20630 64992 y Fa(p)p 21640 64992
V 1003 x Fd(2.)p 0 TeXcolorgray -264 67901 a Fc(a:)p
0 TeXcolorgray 605 w Fd(Le)403 b(p)34 b(oin)-34 b(t)405
b Fc(J)521 b Fd(appartien)-34 b(t-il)405 b(\022)-606
b(a)404 b Fa(C)273 b Fd(?)p 0 TeXcolorgray -144 70774
a Fc(b:)p 0 TeXcolorgray 606 w Fd(Le)403 b(p)34 b(oin)-34
b(t)405 b Fc(D)7424 68702 y Fb( )8383 70774 y Fd(2)f(;)10469
69954 y(3)11075 68952 y Fa(p)p 12085 68952 V 1002 x Fd(2)p
10469 70495 2223 49 v 11277 71606 a(4)12824 68702 y Fb(!)14188
70774 y Fd(appartien)-34 b(t-il)405 b(\022)-606 b(a)404
b Fa(C)273 b Fd(?)-3276 77317 y Fe(Exercice)464 b(4)g(:)h(triangle)p
-3276 77746 12287 49 v -3276 79452 a Fd(Soit)402 b(\()p
Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b Fd(\))400
b(un)i(rep)-34 b(\022)-572 b(ere)400 b(orthonorm)-34
b(\023)-572 b(e.)402 b(Soien)-34 b(t)402 b Fc(A)p Fd(\(1)f(;)603
b(3\),)401 b Fc(B)61 b Fd(\()p Fa(\000)p Fd(1)401 b(;)603
b(1\))402 b(et)f Fc(C)87 b Fd(\(2)401 b(;)603 b(2\).)401
b(Quelle)f(est)i(la)e(nature)i(exacte)f(du)-3276 80958
y(triangle)j Fc(AB)61 b(C)290 b Fd(?)p 0 TeXcolorgray
24768 87289 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -3276 -5208 a Fe(Exercice)464 b(5)g(:)h(triangle)p
-3276 -4778 12287 49 v -3276 -3072 a Fd(Soit)405 b(\()p
Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b Fd(\))403
b(un)i(rep)-34 b(\022)-572 b(ere)403 b(orthonorm)-34
b(\023)-572 b(e.)405 b(On)f(consid)-34 b(\022)-572 b(ere)403
b(la)h(\014gure)h(suiv)-67 b(an)-34 b(te)404 b(:)11238
19004 y @beginspecial 14 @llx 14 @lly 512 @urx 382 @ury
2490 @rwi @setspecial
%%BeginDocument: exo-5.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: GIMP PostScript file plugin V 1,17 by Peter Kirchgessner
%%Title: exo-5.eps
%%CreationDate: Sun Mar 23 19:03:00 2014
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 14 14 512 382
%%EndComments
%%BeginProlog
% Use own dictionary to avoid conflicts
10 dict begin
%%EndProlog
%%Page: 1 1
% Translate for offset
14.173228346456694 14.173228346456694 translate
% Translate to begin of first scanline
0 367.54451847365237 translate
497.31023622047246 -367.54451847365237 scale
% Image geometry
663 490 8
% Transformation matrix
[ 663 0 0 490 0 0 ]
% Strings to hold RGB-samples per scanline
/rstr 663 string def
/gstr 663 string def
/bstr 663 string def
{currentfile /ASCII85Decode filter /RunLengthDecode filter rstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter gstr readstring pop}
{currentfile /ASCII85Decode filter /RunLengthDecode filter bstr readstring pop}
true 3
%%BeginData:        65804 ASCII Bytes
colorimage
[/U/1BS$34rrBics3goI^k)O7rrBjTs*t~>
[/U/1BS$34rrBics3goI^k)O7rrBjTs*t~>
[/U/1BS$34rrBics3goI^k)O7rrBjTs*t~>
[f6L.FU\quJcF7"!5O0cdf0<_JcF4!!5QYTJ,~>
[f6L.FU\quJcF7"!5O0cdf0<_JcF4!!5QYTJ,~>
[f6L.FU\quJcF7"!5O0cdf0<_JcF4!!5QYTJ,~>
\,Q["77I9m'u5D#ec,WbJcF0u!5O0ce,KE`a8^Y~>
\,Q["77I9m'u5D#ec,WbJcF0u!5O0ce,KE`a8^Y~>
\,Q["77I9m'u5D#ec,WbJcF0u!5O0ce,KE`a8^Y~>
\Gli],'Nkas1fAbJcF=$!5O0cdf0<_JcF4!!5QYTJ,~>
\Gli],'Nkas1fAbJcF=$!5O0cdf0<_JcF4!!5QYTJ,~>
\Gli],'Nkas1fAbJcF=$!5O0cdf0<_JcF4!!5QYTJ,~>
\GlhlW;lkts8TlmJcF=$!8iA-df0=)JcF4!!8kisJ,~>
\GlhlW;lkts8TlmJcF=$!8iA-df0=)JcF4!!8kisJ,~>
\GlhlW;lkts8TlmJcF=$!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
s1eW\rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/DprVurErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr;o3!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ
!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZEJ,~>
s1eW\rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/DprVurErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr;o3!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ
!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZEJ,~>
s1eW\rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/DprVurErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZ
rr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uErP/EZrr2uE
rP/EZrr2uErP/EZrr2uErP/EZrr;o3!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ
!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE
!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZE!71VZ!71ZEJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
bPqS8pVHpnpAY*mJcC<$JcC<$\Gq'~>
bPqS8pVHpnpAY*mJcC<$JcC<$\Gq'~>
bPqS8pVHpnpAY*mJcC<$JcC<$\Gq'~>
bPqU%DtnVYbP(r9!.k0$s+13frs$qW%0[M]k^id4s*t~>
bPqU%DtnVYbP(r9!.k0$s+13frs$qW%0[M]k^id4s*t~>
bPqU%DtnVYbP(r9!.k0$s+13frs$qW%0[M]k^id4s*t~>
bl7_653r4K!.k0$s+13grs5DCUA=ibU)r<Fs8N%K~>
bl7_653r4K!.k0$s+13grs5DCUA=ibU)r<Fs8N%K~>
bl7_653r4K!.k0$s+13grs5DCUA=ibU)r<Fs8N%K~>
bl7]qXm>ue!.k0urrCr-s3goIhkg>Sf,j/RrrIpK\c2Zea8^Y~>
bl7]qXm>ue!.k0urrCr-s3goIhkg>Sf,j/RrrIpK\c2Zea8^Y~>
bl7]qXm>ue!.k0urrCr-s3goIhkg>Sf,j/RrrIpK\c2Zea8^Y~>
c2Rh;55tQbk_jt._Xd^,!.k0urrBics3goI^nq&3As)uj!VN%prrBjTs*t~>
c2Rh;55tQbk_jt._Xd^,!.k0urrBics3goI^nq&3As)uj!VN%prrBjTs*t~>
c2Rh;55tQbk_jt._Xd^,!.k0urrBics3goI^nq&3As)uj!VN%prrBjTs*t~>
c2S-/V#UJFK_tf7)LV/V!!%TMdf0<_JcF0u!5PH2!?U(%rrBjTs*t~>
c2S-/V#UJFK_tf7)LV/V!!%TMdf0<_JcF0u!5PH2!?U(%rrBjTs*t~>
c2S-/V#UJFK_tf7)LV/V!!%TMdf0<_JcF0u!5PH2!?U(%rrBjTs*t~>
cMmqB55tQe?l%Sus'>]qo`"mkJcF0u!5O0cdf0<_V>gMtYl=^=a8^Y~>
cMmqB55tQe?l%Sus'>]qo`"mkJcF0u!5O0cdf0<_V>gMtYl=^=a8^Y~>
cMmqB55tQe?l%Sus'>]qo`"mkJcF0u!5O0cdf0<_V>gMtYl=^=a8^Y~>
cMmp/T)S`pO!*N`s'>]so`"mkJcF0u!5O0cdf0<_V>gN!Yl=^=a8^Y~>
cMmp/T)S`pO!*N`s'>]so`"mkJcF0u!5O0cdf0<_V>gN!Yl=^=a8^Y~>
cMmp/T)S`pO!*N`s'>]so`"mkJcF0u!5O0cdf0<_V>gN!Yl=^=a8^Y~>
ci4(F4T5*U!A?Y.rr<%Ms3goIhgtgUrrCrQrrFS,Z2Xg]a8^Y~>
ci4(F4T5*U!A?Y.rr<%Ms3goIhgtgUrrCrQrrFS,Z2Xg]a8^Y~>
ci4(F4T5*U!A?Y.rr<%Ms3goIhgtgUrrCrQrrFS,Z2Xg]a8^Y~>
ci4$9PPP4[OYc4mrr<%Ms+13$s2G!=Dj1%t!2>&Err7K~>
ci4$9PPP4[OYc4mrr<%Ms+13$s2G!=Dj1%t!2>&Err7K~>
ci4$9PPP4[OYc4mrr<%Ms+13$s2G!=Dj1%t!2>&Err7K~>
fDbidqYpR[qtpBqU1l`eo)A[iJcC<$JcE^h!nSR[r;Qf$IY%Ous*t~>
fDbidqYpR[qtpBqU1l`eo)A[iJcC<$JcE^h!nSR[r;Qf$IY%Ous*t~>
fDbidqYpR[qtpBqU1l`eo)A[iJcC<$JcE^h!nSR[r;Qf$IY%Ous*t~>
g&D0QOT;ZarrJpTq#:Em2G*N?!!%TMJcC<$`;^+(-)CG<ieBSgJcG`LJ,~>
g&D0QOT;ZarrJpTq#:Em2G*N?!!%TMJcC<$`;^+(-)CG<ieBSgJcG`LJ,~>
g&D0QOT;ZarrJpTq#:Em2G*N?!!%TMJcC<$`;^+(-)CG<ieBSgJcG`LJ,~>
g&D/ko.rH*rrG=Xp\t;d!1`]]!!%TMdf0=)JcF0u!8jRO#.$W&"!rEh\GlQda8^Y~>
g&D/ko.rH*rrG=Xp\t;d!1`]]!!%TMdf0=)JcF0u!8jRO#.$W&"!rEh\GlQda8^Y~>
g&D/ko.rH*rrG=Xp\t;d!1`]]!!%TMdf0=)JcF0u!8jRO#.$W&"!rEh\GlQda8^Y~>
fDboS!6Y<@!OICUrrW.=T`4rm[/aD&rr<%Ms3goI^k)O6rrBics3puJ^rQJ*~>
fDboS!6Y<@!OICUrrW.=T`4rm[/aD&rr<%Ms3goI^k)O6rrBics3puJ^rQJ*~>
fDboS!6Y<@!OICUrrW.=T`4rm[/aD&rr<%Ms3goI^k)O6rrBics3puJ^rQJ*~>
f)Gap;uZdt54e^P!m^ibrr3&'!+ba%!!%TMdf0<_JcF0u!5O0ce,KE`a8^Y~>
f)Gap;uZdt54e^P!m^ibrr3&'!+ba%!!%TMdf0<_JcF0u!5O0ce,KE`a8^Y~>
f)Gap;uZdt54e^P!m^ibrr3&'!+ba%!!%TMdf0<_JcF0u!5O0ce,KE`a8^Y~>
f)Go="5X!hIf'-Hq_?7mrrR0BdJ!SCZSVY5X+C<#rrBics3goI^o[P=ZSW(AX0)C%^rQJ*~>
f)Go="5X!hIf'-Hq_?7mrrR0BdJ!SCZSVY5X+C<#rrBics3goI^o[P=ZSW(AX0)C%^rQJ*~>
f)Go="5X!hIf'-Hq_?7mrrR0BdJ!SCZSVY5X+C<#rrBics3goI^o[P=ZSW(AX0)C%^rQJ*~>
f)GpL(2s4@m/$_daC_dKU):61rs#eK:IJ"tX+C<$rrBics3goI^odV@ZOdNJ9-((9rrBjTs*t~>
f)GpL(2s4@m/$_daC_dKU):61rs#eK:IJ"tX+C<$rrBics3goI^odV@ZOdNJ9-((9rrBjTs*t~>
f)GpL(2s4@m/$_daC_dKU):61rs#eK:IJ"tX+C<$rrBics3goI^odV@ZOdNJ9-((9rrBjTs*t~>
q>UKKT&9PMJ-WE'q#:Kq[A:##p&>%H4T7_L4=,RYec,X,JcF0u!8jpY!$D.>!Bqp7rrCrss*t~>
q>UKKT&9PMJ-WE'q#:Kq[A:##p&>%H4T7_L4=,RYec,X,JcF0u!8jpY!$D.>!Bqp7rrCrss*t~>
q>UKKT&9PMJ-WE'q#:Kq[A:##p&>%H4T7_L4=,RYec,X,JcF0u!8jpY!$D.>!Bqp7rrCrss*t~>
r;QoZMeO)?hu<fD"V'\Yrr<H)6imAhJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I!W2ot#D)pHs*t~>
r;QoZMeO)?hu<fD"V'\Yrr<H)6imAhJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I!W2ot#D)pHs*t~>
r;QoZMeO)?hu<fD"V'\Yrr<H)6imAhJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJ
J,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I
J,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?IJ,]HJJ,K?I!W2ot#D)pHs*t~>
r;Qoqp&@Ejo)A\imf*<'Ds%'#,;]<e!AtdHs+13$s3UcG$2ac',_?!es*t~>
r;Qoqp&@Ejo)A\imf*<'Ds%'#,;]<e!AtdHs+13$s3UcG$2ac',_?!es*t~>
r;Qoqp&@Ejo)A\imf*<'Ds%'#,;]<e!AtdHs+13$s3UcG$2ac',_?!es*t~>
q>UI`AFfa#9CDf\m.'6<#,V_`6o>=BJcC<$JcF*s!,DH4!=5`Ws7?8@~>
q>UI`AFfa#9CDf\m.'6<#,V_`6o>=BJcC<$JcF*s!,DH4!=5`Ws7?8@~>
q>UI`AFfa#9CDf\m.'6<#,V_`6o>=BJcC<$JcF*s!,DH4!=5`Ws7?8@~>
q>UI`AFfa#9@3\AQ50N5Mh1oXrrCr-s3goIhlQh\('4ID/?SpPhoGbI~>
q>UI`AFfa#9@3\AQ50N5Mh1oXrrCr-s3goIhlQh\('4ID/?SpPhoGbI~>
q>UI`AFfa#9@3\AQ50N5Mh1oXrrCr-s3goIhlQh\('4ID/?SpPhoGbI~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^odV@Y=SZns$3WfrrBjTs*t~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^odV@Y=SZns$3WfrrBjTs*t~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^odV@Y=SZns$3WfrrBjTs*t~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^om\CpFP)!J,dP;qlg#"^rQJ*~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^om\CpFP)!J,dP;qlg#"^rQJ*~>
q>UI`AFfa#9@!P;!.k0urrBics3goI^om\CpFP)!J,dP;qlg#"^rQJ*~>
q>UI`AGH0)p\aU_8,VrYqtg?Uo`4p`rr<%Ms3goI^k)O6rrBj;rrIUcr;Qe:Q`pDh^rQJ*~>
q>UI`AGH0)p\aU_8,VrYqtg?Uo`4p`rr<%Ms3goI^k)O6rrBj;rrIUcr;Qe:Q`pDh^rQJ*~>
q>UI`AGH0)p\aU_8,VrYqtg?Uo`4p`rr<%Ms3goI^k)O6rrBj;rrIUcr;Qe:Q`pDh^rQJ*~>
q>UI`AGH0)Fo5PG*;j+CT)/KM7f^$lrr<%Ms3goI^k)O6rrBj<rrVX3hu*KUk8`rprrBjTs*t~>
q>UI`AGH0)Fo5PG*;j+CT)/KM7f^$lrr<%Ms3goI^k)O6rrBj<rrVX3hu*KUk8`rprrBjTs*t~>
q>UI`AGH0)Fo5PG*;j+CT)/KM7f^$lrr<%Ms3goI^k)O6rrBj<rrVX3hu*KUk8`rprrBjTs*t~>
q>UI`AFfa#9@!P;!.k0urrCr-s3goIhlm%\>a,$a!ISjjrrCrss*t~>
q>UI`AFfa#9@!P;!.k0urrCr-s3goIhlm%\>a,$a!ISjjrrCrss*t~>
q>UI`AFfa#9@!P;!.k0urrCr-s3goIhlm%\>a,$a!ISjjrrCrss*t~>
q>UI`AFfa#9@!P;!.k0$s+13srrULpqu6TqJ,]HLq^BdAs7ZJC~>
q>UI`AFfa#9@!P;!.k0$s+13srrULpqu6TqJ,]HLq^BdAs7ZJC~>
q>UI`AFfa#9@!P;!.k0$s+13srrULpqu6TqJ,]HLq^BdAs7ZJC~>
q>UI\@e0O!9@!P;!.k0$s+13srrG*grVlitrVlo!9S*6;s*t~>
q>UI\@e0O!9@!P;!.k0$s+13srrG*grVlitrVlo!9S*6;s*t~>
q>UI\@e0O!9@!P;!.k0$s+13srrG*grVlitrVlo!9S*6;s*t~>
r;QuUAm>cfA8Ci;!)(W;!!%TMJcC<$dJj6B9`4nj!;uit1p;K1p]#a~>
r;QuUAm>cfA8Ci;!)(W;!!%TMJcC<$dJj6B9`4nj!;uit1p;K1p]#a~>
r;QuUAm>cfA8Ci;!)(W;!!%TMJcC<$dJj6B9`4nj!;uit1p;K1p]#a~>
kl1WUlMh"NJ7*BClMghaJcF0u!8iA-df0=)ZMt!t,g6,c!!)rs!ll_dZi:$_a8^Y~>
kl1WUlMh"NJ7*BClMghaJcF0u!8iA-df0=)ZMt!t,g6,c!!)rs!ll_dZi:$_a8^Y~>
kl1WUlMh"NJ7*BClMghaJcF0u!8iA-df0=)ZMt!t,g6,c!!)rs!ll_dZi:$_a8^Y~>
kl1X_li.1@F7oRB%>O3K!!%TMdf0<_JcF0u!5Po?!Io@krr<&rrrHMsZi:$@a8^Y~>
kl1X_li.1@F7oRB%>O3K!!%TMdf0<_JcF0u!5Po?!Io@krr<&rrrHMsZi:$@a8^Y~>
kl1X_li.1@F7oRB%>O3K!!%TMdf0<_JcF0u!5Po?!Io@krr<&rrrHMsZi:$@a8^Y~>
dJj5Rqu6TsL&f]hrr<%Ms3goI^k)O6rrBj@rrUdpn,*+bJ,B6Ih]1gdrrBjTs*t~>
dJj5Rqu6TsL&f]hrr<%Ms3goI^k)O6rrBj@rrUdpn,*+bJ,B6Ih]1gdrrBjTs*t~>
dJj5Rqu6TsL&f]hrr<%Ms3goI^k)O6rrBj@rrUdpn,*+bJ,B6Ih]1gdrrBjTs*t~>
dJj4I-iX,I\H%QSrr<%Ms3goI^k)O6rrBj@rrH)Wo)A`?Cpa3B^rQJ*~>
dJj4I-iX,I\H%QSrr<%Ms3goI^k)O6rrBj@rrH)Wo)A`?Cpa3B^rQJ*~>
dJj4I-iX,I\H%QSrr<%Ms3goI^k)O6rrBj@rrH)Wo)A`?Cpa3B^rQJ*~>
dJj5LEW5t>\H%BNrr<%Ms3goI^k)O6rrBjArrU@tp[\=cpE\Y(rrBjTs*t~>
dJj5LEW5t>\H%BNrr<%Ms3goI^k)O6rrBjArrU@tp[\=cpE\Y(rrBjTs*t~>
dJj5LEW5t>\H%BNrr<%Ms3goI^k)O6rrBjArrU@tp[\=cpE\Y(rrBjTs*t~>
bl7a&!7C05!!%TMdf0=)JcF0u!8k3a!rFO\nG`N]7(*$phoGbI~>
bl7a&!7C05!!%TMdf0=)JcF0u!8k3a!rFO\nG`N]7(*$phoGbI~>
bl7a&!7C05!!%TMdf0=)JcF0u!8k3a!rFO\nG`N]7(*$phoGbI~>
c2Rk>*bjs?!!%TMJcC<$ec,Z:;#(%jJ,0*Gq^B41s82hH~>
c2Rk>*bjs?!!%TMJcC<$ec,Z:;#(%jJ,0*Gq^B41s82hH~>
c2Rk>*bjs?!!%TMJcC<$ec,Z:;#(%jJ,0*Gq^B41s82hH~>
c2Rf[;<n/]!.k0$s+14$rrVX+j7rWS!;QQq__Ct=s8;nI~>
c2Rf[;<n/]!.k0$s+14$rrVX+j7rWS!;QQq__Ct=s8;nI~>
c2Rf[;<n/]!.k0$s+14$rrVX+j7rWS!;QQq__Ct=s8;nI~>
cMmp8@-R[k!.k0$s+14$rrI4Xp\t3np\t7nO+I?/s*t~>
cMmp8@-R[k!.k0$s+14$rrI4Xp\t3np\t7nO+I?/s*t~>
cMmp8@-R[k!.k0$s+14$rrI4Xp\t3np\t7nO+I?/s*t~>
ci4$PJH#QKfBiM;!.k0urrCr-s3goIhm`UedjXPVrr<&nrrUdlo=4f#hoGbI~>
ci4$PJH#QKfBiM;!.k0urrCr-s3goIhm`UedjXPVrr<&nrrUdlo=4f#hoGbI~>
ci4$PJH#QKfBiM;!.k0urrCr-s3goIhm`UedjXPVrr<&nrrUdlo=4f#hoGbI~>
d/O-dPQ(R_o;:mS!!%TMdf0<_JcF0u!5Q)D!E>]brr<&mrrHeP\GlQEa8^Y~>
d/O-dPQ(R_o;:mS!!%TMdf0<_JcF0u!5Q)D!E>]brr<&mrrHeP\GlQEa8^Y~>
d/O-dPQ(R_o;:mS!!%TMdf0<_JcF0u!5Q)D!E>]brr<&mrrHeP\GlQEa8^Y~>
dJj7!9Dt@]9=sQj!!%TMdf0<_JcF0u!5Q,E!kU#\pAY,BpAY3_+Q'a0!5QYTJ,~>
dJj7!9Dt@]9=sQj!!%TMdf0<_JcF0u!5Q,E!kU#\pAY,BpAY3_+Q'a0!5QYTJ,~>
dJj7!9Dt@]9=sQj!!%TMdf0<_JcF0u!5Q,E!kU#\pAY,BpAY3_+Q'a0!5QYTJ,~>
dJj1bqZ$Wlm/I%cJcF0u!5O0cdf0<_\c2a.,ff-K!L$?jrrBjTs*t~>
dJj1bqZ$Wlm/I%cJcF0u!5O0cdf0<_\c2a.,ff-K!L$?jrrBjTs*t~>
dJj1bqZ$Wlm/I%cJcF0u!5O0cdf0<_\c2a.,ff-K!L$?jrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_\c2\k<9O8_pE[MbrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_\c2\k<9O8_pE[MbrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_\c2\k<9O8_pE[MbrrBjTs*t~>
[/U++JcF0u!8iA-df0=)])Mit'\hdM!l$Sh]Dhlga8^Y~>
[/U++JcF0u!8iA-df0=)])Mit'\hdM!l$Sh]Dhlga8^Y~>
[/U++JcF0u!8iA-df0=)])Mit'\hdM!l$Sh]Dhlga8^Y~>
[/U++JcC<$JcFI(!H<GXrr@Q?rrGNGJc>`MJ,~>
[/U++JcC<$JcFI(!H<GXrr@Q?rrGNGJc>`MJ,~>
[/U++JcC<$JcFI(!H<GXrr@Q?rrGNGJc>`MJ,~>
[/U++JcC<$JcFL)!m_kXoD\djoD\m<*:na]J,~>
[/U++JcC<$JcFL)!m_kXoD\djoD\m<*:na]J,~>
[/U++JcC<$JcFL)!m_kXoD\djoD\m<*:na]J,~>
[/U++JcC<$JcFL)!D&FFrr<&irrHe\JcC6~>
[/U++JcC<$JcFL)!D&FFrr<&irrHe\JcC6~>
[/U++JcC<$JcFL)!D&FFrr<&irrHe\JcC6~>
[/U++JcF0u!8iA-df0=)]`/#)5k4jS!:p-kmhFNirrCrss*t~>
[/U++JcF0u!8iA-df0=)]`/#)5k4jS!:p-kmhFNirrCrss*t~>
[/U++JcF0u!8iA-df0=)]`/#)5k4jS!:p-kmhFNirrCrss*t~>
[/U++JcF0u!5O0cdf0<_^&J0.*5h=H!!)Qh!J=XjrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^&J0.*5h=H!!)Qh!J=XjrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^&J0.*5h=H!!)Qh!J=XjrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^&J+k9^r&^J+<O?pE[qrrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^&J+k9^r&^J+<O?pE[qrrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^&J+k9^r&^J+<O?pE[qrrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_^Ae8p(uO3M!in<X^]+;La8^Y~>
[/U++JcF0u!5O0cdf0<_^Ae8p(uO3M!in<X^]+;La8^Y~>
[/U++JcF0u!5O0cdf0<_^Ae8p(uO3M!in<X^]+;La8^Y~>
[/U++JcF0u!5O0cdf0<_^Ae4EJ)(&)7%:sk!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_^Ae4EJ)(&)7%:sk!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_^Ae4EJ)(&)7%:sk!5QYTJ,~>
[/U++JcF0u!8iA-df0=)^]+Ae*:qtc!nSF`_#FDla8^Y~>
[/U++JcF0u!8iA-df0=)^]+Ae*:qtc!nSF`_#FDla8^Y~>
[/U++JcF0u!8iA-df0=)^]+Ae*:qtc!nSF`_#FDla8^Y~>
[/U++JcC<$JcFX-!C2k:rr@Q:rrHqcL&ZZ~>
[/U++JcC<$JcFX-!C2k:rr@Q:rrHqcL&ZZ~>
[/U++JcC<$JcFX-!C2k:rr@Q:rrHqcL&ZZ~>
[/U++JcC<$JcF[.!P:Varr<&errVX/f7s<U~>
[/U++JcC<$JcF[.!P:Varr<&errVX/f7s<U~>
[/U++JcC<$JcF[.!P:Varr<&errVX/f7s<U~>
[/U++JcC<$JcF^/!qR\TmJd.dmJd3B9SWRt~>
[/U++JcC<$JcF^/!qR\TmJd.dmJd3B9SWRt~>
[/U++JcC<$JcF^/!qR\TmJd.dmJd3B9SWRt~>
[/U++JcF0u!8iA-df0=)_>aO\9^McZ!:Bdfq]rqnrrCrss*t~>
[/U++JcF0u!8iA-df0=)_>aO\9^McZ!:Bdfq]rqnrrCrss*t~>
[/U++JcF0u!8iA-df0=)_>aO\9^McZ!:Bdfq]rqnrrCrss*t~>
[/U++JcF0u!5O0cdf0<__Z']#(t\-S!!)Bc!ja`\_uB_Pa8^Y~>
[/U++JcF0u!5O0cdf0<__Z']#(t\-S!!)Bc!ja`\_uB_Pa8^Y~>
[/U++JcF0u!5O0cdf0<__Z']#(t\-S!!)Bc!ja`\_uB_Pa8^Y~>
[/U++JcF0u!5O0cdf0<__Z'XEJ*[+7J*[+88>F*&!5QYTJ,~>
[/U++JcF0u!5O0cdf0<__Z'XEJ*[+7J*[+88>F*&!5QYTJ,~>
[/U++JcF0u!5O0cdf0<__Z'XEJ*[+7J*[+88>F*&!5QYTJ,~>
[/U++JcF0u!5O0cdf0<__uBe]*:q\[!o"FX`;]hQa8^Y~>
[/U++JcF0u!5O0cdf0<__uBe]*:q\[!o"FX`;]hQa8^Y~>
[/U++JcF0u!5O0cdf0<__uBe]*:q\[!o"FX`;]hQa8^Y~>
[/U++JcF0u!5O0cdf0<__uBa*QdYm7<.)Xa!5QYTJ,~>
[/U++JcF0u!5O0cdf0<__uBa*QdYm7<.)Xa!5QYTJ,~>
[/U++JcF0u!5O0cdf0<__uBa*QdYm7<.)Xa!5QYTJ,~>
[/U++JcF0u!8iA-df0=)`;]n:3;_/(!oF^P`W#qqa8^Y~>
[/U++JcF0u!8iA-df0=)`;]n:3;_/(!oF^P`W#qqa8^Y~>
[/U++JcF0u!8iA-df0=)`;]n:3;_/(!oF^P`W#qqa8^Y~>
[/U++JcC<$JcFj3!r"+dl2La5l2Ld3@#Fu7~>
[/U++JcC<$JcFj3!r"+dl2La5l2Ld3@#Fu7~>
[/U++JcC<$JcFj3!r"+dl2La5l2Ld3@#Fu7~>
[/U++JcC<$JcFj3!Imr0rr<&`rrVp;_i+PF~>
[/U++JcC<$JcFj3!Imr0rr<&`rrVp;_i+PF~>
[/U++JcC<$JcFj3!Imr0rr<&`rrVp;_i+PF~>
[/U++JcC<$JcFm4!p:ETkl1V_kl1[a/;sOY~>
[/U++JcC<$JcFm4!p:ETkl1V_kl1[a/;sOY~>
[/U++JcC<$JcFm4!p:ETkl1V_kl1[a/;sOY~>
[/U++JcF0u!8iA-df0=)`r?'AJ*6h3!9a@_4J0[o!8kisJ,~>
[/U++JcF0u!8iA-df0=)`r?'AJ*6h3!9a@_4J0[o!8kisJ,~>
[/U++JcF0u!8iA-df0=)`r?'AJ*6h3!9a@_4J0[o!8kisJ,~>
[/U++JcF0u!5O0cdf0<_a8Z4a+S4dr!!)3^!m`"\aSu7Ua8^Y~>
[/U++JcF0u!5O0cdf0<_a8Z4a+S4dr!!)3^!m`"\aSu7Ua8^Y~>
[/U++JcF0u!5O0cdf0<_a8Z4a+S4dr!!)3^!m`"\aSu7Ua8^Y~>
[/U++JcF0u!5O0cdf0<_a8Z0.UZVRVJ*-b3<.E!h!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_a8Z0.UZVRVJ*-b3<.E!h!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_a8Z0.UZVRVJ*-b3<.E!h!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_aSu=24T!;$!ojjDao;@Va8^Y~>
[/U++JcF0u!5O0cdf0<_aSu=24T!;$!ojjDao;@Va8^Y~>
[/U++JcF0u!5O0cdf0<_aSu=24T!;$!ojjDao;@Va8^Y~>
[/U++JcF0u!5O0cdf0<_ao;G>,h'j7!J=(frrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ao;G>,h'j7!J=(frrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ao;G>,h'j7!J=(frrBjTs*t~>
[/U++JcF0u!8iA-df0=)ao;BhBZL,SpDgrjrrCrss*t~>
[/U++JcF0u!8iA-df0=)ao;BhBZL,SpDgrjrrCrss*t~>
[/U++JcF0u!8iA-df0=)ao;BhBZL,SpDgrjrrCrss*t~>
[/U++JcC<$JcG$8!p:-LjSo40jSo7a1lqZe~>
[/U++JcC<$JcG$8!p:-LjSo40jSo7a1lqZe~>
[/U++JcC<$JcG$8!p:-LjSo40jSo7a1lqZe~>
[/U++JcC<$JcG$8!FU]Crr<&ZrrG*_OT0h~>
[/U++JcC<$JcG$8!FU]Crr<&ZrrG*_OT0h~>
[/U++JcC<$JcG$8!FU]Crr<&ZrrG*_OT0h~>
[/U++JcC<$JcG'9!kTTLj8T)Zj8T2,,kI/uJ,~>
[/U++JcC<$JcG'9!kTTLj8T)Zj8T2,,kI/uJ,~>
[/U++JcC<$JcG'9!kTTLj8T)Zj8T2,,kI/uJ,~>
[/U++JcF0u!8iA-df0=)bPqT*X5a-Z!94"Z=FA?m!8kisJ,~>
[/U++JcF0u!8iA-df0=)bPqT*X5a-Z!94"Z=FA?m!8kisJ,~>
[/U++JcF0u!8iA-df0=)bPqT*X5a-Z!94"Z=FA?m!8kisJ,~>
[/U++JcF0u!5O0cdf0<_bl7^97,e.G!94"[k7lt$rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_bl7^97,e.G!94"[k7lt$rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_bl7^97,e.G!94"[k7lt$rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2Rk:,hM#T!.Wu-!J=@rrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2Rk:,hM#T!.Wu-!J=@rrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2Rk:,hM#T!.Wu-!J=@rrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2RfhCqouOq]rr%rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2RfhCqouOq]rr%rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_c2RfhCqouOq]rr%rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_cMmt#+Rd&E!N.d"rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_cMmt#+Rd&E!N.d"rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_cMmt#+Rd&E!N.d"rrBjTs*t~>
[/U++JcF0u!8iA-df0=)cMmoAS%Sb%5c;s.!8kisJ,~>
[/U++JcF0u!8iA-df0=)cMmoAS%Sb%5c;s.!8kisJ,~>
[/U++JcF0u!8iA-df0=)cMmoAS%Sb%5c;s.!8kisJ,~>
[/U++JcC<$JcG3=!k0`Xhu<\+hu<bu,kI<$J,~>
[/U++JcC<$JcG3=!k0`Xhu<\+hu<bu,kI<$J,~>
[/U++JcC<$JcG3=!k0`Xhu<\+hu<bu,kI<$J,~>
[/U++JcC<$JcG6>!rF7XhZ!QUhZ!UaJ!L%a~>
[/U++JcC<$JcG6>!rF7XhZ!QUhZ!UaJ!L%a~>
[/U++JcC<$JcG6>!rF7XhZ!QUhZ!UaJ!L%a~>
[/U++JcC<$JcG6>!LH@5rr<&UrrV'tkEc-u~>
[/U++JcC<$JcG6>!LH@5rr<&UrrV'tkEc-u~>
[/U++JcC<$JcG6>!LH@5rr<&UrrV'tkEc-u~>
[/U++JcF0u!8iA-df0=)dJj::'\hID!!(jT!InM)rrCrss*t~>
[/U++JcF0u!8iA-df0=)dJj::'\hID!!(jT!InM)rrCrss*t~>
[/U++JcF0u!8iA-df0=)dJj::'\hID!!(jT!InM)rrCrss*t~>
[/U++JcF0u!5O0cdf0<_dJj5\Ghi<!!8[YVmi9g)rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_dJj5\Ghi<!!8[YVmi9g)rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_dJj5\Ghi<!!8[YVmi9g)rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0Bt*:M\_!.Wf(!M;X*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0Bt*:M\_!.Wf(!M;X*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0Bt*:M\_!.Wf(!M;X*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0>5T=+\#q^f5*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0>5T=+\#q^f5*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_df0>5T=+\#q^f5*rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_e,KKY/GlgS!l$#XeGfNaa8^Y~>
[/U++JcF0u!5O0cdf0<_e,KKY/GlgS!l$#XeGfNaa8^Y~>
[/U++JcF0u!5O0cdf0<_e,KKY/GlgS!l$#XeGfNaa8^Y~>
[/U++JcF0u!8iA-df0=)eGfUI,epYb!Eb-,rrCrss*t~>
[/U++JcF0u!8iA-df0=)eGfUI,epYb!Eb-,rrCrss*t~>
[/U++JcF0u!8iA-df0=)eGfUI,epYb!Eb-,rrCrss*t~>
[/U++JcC<$JcGBB!Jae1rr@Q&rrUphn!a9,~>
[/U++JcC<$JcGBB!Jae1rr@Q&rrUphn!a9,~>
[/U++JcC<$JcGBB!Jae1rr@Q&rrUphn!a9,~>
[/U++JcC<$JcGEC!p:ETg&D$Pg&D(tBU\sO~>
[/U++JcC<$JcGEC!p:ETg&D$Pg&D(tBU\sO~>
[/U++JcC<$JcGEC!p:ETg&D$Pg&D(tBU\sO~>
[/U++JcC<$JcGEC!FUE0rr<&PrrVX'gRJ4n~>
[/U++JcC<$JcGEC!FUE0rr<&PrrVX'gRJ4n~>
[/U++JcC<$JcGEC!FUE0rr<&PrrVX'gRJ4n~>
[/U++JcF0u!8iA-df0=)f)Gg#*:MP[!!([O!LH@.rrCrss*t~>
[/U++JcF0u!8iA-df0=)f)Gg#*:MP[!!([O!LH@.rrCrss*t~>
[/U++JcF0u!8iA-df0=)f)Gg#*:MP[!!([O!LH@.rrCrss*t~>
[/U++JcF0u!5O0cdf0<_f)Gb9T@a)C!8.;Qq]rr.rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f)Gb9T@a)C!8.;Qq]rr.rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f)Gb9T@a)C!8.;Qq]rr.rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_fDboM3;_>-!.WW#!k0`Xf`(rea8^Y~>
[/U++JcF0u!5O0cdf0<_fDboM3;_>-!.WW#!k0`Xf`(rea8^Y~>
[/U++JcF0u!5O0cdf0<_fDboM3;_>-!.WW#!k0`Xf`(rea8^Y~>
[/U++JcF0u!5O0cdf0<_f`)$M,epAZ!D&R0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f`)$M,epAZ!D&R0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f`)$M,epAZ!D&R0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f`(u-=K2<%gD',0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f`(u-=K2<%gD',0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_f`(u-=K2<%gD',0rrBjTs*t~>
[/U++JcF0u!8iA-df0=)g&D-:(u)"h!GH`2rrCrss*t~>
[/U++JcF0u!8iA-df0=)g&D-:(u)"h!GH`2rrCrss*t~>
[/U++JcF0u!8iA-df0=)g&D-:(u)"h!GH`2rrCrss*t~>
[/U++JcC<$JcGQG!FUE,rr@Q!rrVX'gRnLr~>
[/U++JcC<$JcGQG!FUE,rr@Q!rrVX'gRnLr~>
[/U++JcC<$JcGQG!FUE,rr@Q!rrVX'gRnLr~>
[/U++JcC<$JcGTH!llSTeGfLKeGfQ)=J,VD~>
[/U++JcC<$JcGTH!llSTeGfLKeGfQ)=J,VD~>
[/U++JcC<$JcGTH!llSTeGfLKeGfQ)=J,VD~>
[/U++JcC<$JcGTH!C3:+rr<&KrrW'C^S(UW~>
[/U++JcC<$JcGTH!C3:+rr<&KrrW'C^S(UW~>
[/U++JcC<$JcGTH!C3:+rr<&KrrW'C^S(UW~>
[/U++JcF0u!8iA-df0=)g]%>Q3;_2)!!(LJ!N.p3rrCrss*t~>
[/U++JcF0u!8iA-df0=)g]%>Q3;_2)!!(LJ!N.p3rrCrss*t~>
[/U++JcF0u!8iA-df0=)g]%>Q3;_2)!!(LJ!N.p3rrCrss*t~>
[/U++JcF0u!5O0cdf0<_h#@HM.)441!!(II!C3:4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h#@HM.)441!!(II!C3:4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h#@HM.)441!!(II!C3:4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h#@D)@+"uSJ(">ua!C94rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h#@D)@+"uSJ(">ua!C94rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h#@D)@+"uSJ(">ua!C94rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[Q6+QoEt!FUE5rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[Q6+QoEt!FUE5rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[Q6+QoEt!FUE5rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[L`J"Q`Bk8<+5rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[L`J"Q`Bk8<+5rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_h>[L`J"Q`Bk8<+5rrBjTs*t~>
[/U++JcF0u!8iA-df0=)hZ!Yt,k%?)!InM6rrCrss*t~>
[/U++JcF0u!8iA-df0=)hZ!Yt,k%?)!InM6rrCrss*t~>
[/U++JcF0u!8iA-df0=)hZ!Yt,k%?)!InM6rrCrss*t~>
[/U++JcC<$JcG`L!C3R/rr@PqrrVp;_kd<_~>
[/U++JcC<$JcG`L!C3R/rr@PqrrVp;_kd<_~>
[/U++JcC<$JcG`L!C3R/rr@PqrrVp;_kd<_~>
[/U++JcC<$JcGcM!M;X&rr<&FrrJ`WV#Pr~>
[/U++JcC<$JcGcM!M;X&rr<&FrrJ`WV#Pr~>
[/U++JcC<$JcGcM!M;X&rr<&FrrJ`WV#Pr~>
[/U++JcC<$Jc>iPmi9g%rr<&ErrG6[V>l&~>
[/U++JcC<$Jc>iPmi9g%rr<&ErrG6[V>l&~>
[/U++JcC<$Jc>iPmi9g%rr<&ErrG6[V>l&~>
[/U++JcF0u!8iA-df0=)i;Wh-@*S]O!7(TG^Ei^8rrCrss*t~>
[/U++JcF0u!8iA-df0=)i;Wh-@*S]O!7(TG^Ei^8rrCrss*t~>
[/U++JcF0u!8iA-df0=)i;Wh-@*S]O!7(TG^Ei^8rrCrss*t~>
[/U++JcF0u!5O0cdf0<_iVru:+Qq#L!!(:D!Eb-9rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_iVru:+Qq#L!!(:D!Eb-9rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_iVru:+Qq#L!!(:D!Eb-9rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_iVrp\LWobuJ'Iuph]1h=rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_iVrp\LWobuJ'Iuph]1h=rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_iVrp\LWobuJ'Iuph]1h=rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9)#*:oKr!IneBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9)#*:oKr!IneBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9)#*:oKr!IneBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9$AT9]EXpE\ANrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9$AT9]EXpE\ANrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_ir9$AT9]EXpE\ANrrBjTs*t~>
[/U++JcF0u!8iA-df0=)j8T1M5l6fG!gbnDjSo5;a8^Y~>
[/U++JcF0u!8iA-df0=)j8T1M5l6fG!gbnDjSo5;a8^Y~>
[/U++JcF0u!8iA-df0=)j8T1M5l6fG!gbnDjSo5;a8^Y~>
[/U++JcC<$K`;,B(sC)%!.W/k!ApFJs*t~>
[/U++JcC<$K`;,B(sC)%!.W/k!ApFJs*t~>
[/U++JcC<$K`;,B(sC)%!.W/k!ApFJs*t~>
[/U++JcC<$K`;'l=NURC!6Y<C_]\QNs*t~>
[/U++JcC<$K`;'l=NURC!6Y<C_]\QNs*t~>
[/U++JcC<$K`;'l=NURC!6Y<C_]\QNs*t~>
[/U++JcC<$L&V5+*9YHD!!(.@!EaiOs*t~>
[/U++JcC<$L&V5+*9YHD!!(.@!EaiOs*t~>
[/U++JcC<$L&V5+*9YHD!!(.@!EaiOs*t~>
[/U++JcF0u!8iA-df0=)jo5?TPK<b(!6P6Bk8<7ArrCrss*t~>
[/U++JcF0u!8iA-df0=)jo5?TPK<b(!6P6Bk8<7ArrCrss*t~>
[/U++JcF0u!8iA-df0=)jo5?TPK<b(!6P6Bk8<7ArrCrss*t~>
[/U++JcF0u!5O0cdf0<_k5PL`,kK+W!!(+?!InYBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_k5PL`,kK+W!!(+?!InYBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_k5PL`,kK+W!!(+?!InYBrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kPkVX+LfDk!.W)i!qRPXkPkOta8^Y~>
[/U++JcF0u!5O0cdf0<_kPkVX+LfDk!.W)i!qRPXkPkOta8^Y~>
[/U++JcF0u!5O0cdf0<_kPkVX+LfDk!.W)i!qRPXkPkOta8^Y~>
[/U++JcF0u!5O0cdf0<_kPkR87#V'HUHJG;rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kPkR87#V'HUHJG;rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kPkR87#V'HUHJG;rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kl1_E&D)g>!BcS0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kl1_E&D)g>!BcS0rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_kl1_E&D)g>!BcS0rrBjTs*t~>
[/U++JcF0u!8iA-df0=)kl1ZkCl//nb8g-<rrCrss*t~>
[/U++JcF0u!8iA-df0=)kl1ZkCl//nb8g-<rrCrss*t~>
[/U++JcF0u!8iA-df0=)kl1ZkCl//nb8g-<rrCrss*t~>
[/U++JcC<$M>mXt)!f0@!.Vuf!F0lPs*t~>
[/U++JcC<$M>mXt)!f0@!.Vuf!F0lPs*t~>
[/U++JcC<$M>mXt)!f0@!.Vuf!F0lPs*t~>
[/U++JcC<$M>mT9S&G=,!6+s>itU+Ks*t~>
[/U++JcC<$M>mT9S&G=,!6+s>itU+Ks*t~>
[/U++JcC<$M>mT9S&G=,!6+s>itU+Ks*t~>
[/U++JcC<$MZ3aI./Us_!!'t;!In(Ps*t~>
[/U++JcC<$MZ3aI./Us_!!'t;!In(Ps*t~>
[/U++JcC<$MZ3aI./Us_!!'t;!In(Ps*t~>
[/U++JcF0u!8iA-df0=)li.%T'YD9_!!'t;!r!\Pli-tBa8^Y~>
[/U++JcF0u!8iA-df0=)li.%T'YD9_!!'t;!r!\Pli-tBa8^Y~>
[/U++JcF0u!8iA-df0=)li.%T'YD9_!!'t;!r!\Pli-tBa8^Y~>
[/U++JcF0u!5O0cdf0<_li.!19Z$f0!5ng;T.K=.!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_li.!19Z$f0!5ng;T.K=.!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_li.!19Z$f0!5ng;T.K=.!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_m/I.Q'\C5%!.Vlc!Ap;4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_m/I.Q'\C5%!.Vlc!Ap;4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_m/I.Q'\C5%!.Vlc!Ap;4rrBjTs*t~>
[/U++JcF0u!5O0cdf0<_m/R*%Jc>ep*:rRt!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_m/R*%Jc>ep*:rRt!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_m/R*%Jc>ep*:rRt!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_mJd7>)"3%U!rlYQmJd1%a8^Y~>
[/U++JcF0u!5O0cdf0<_mJd7>)"3%U!rlYQmJd1%a8^Y~>
[/U++JcF0u!5O0cdf0<_mJd7>)"3%U!rlYQmJd1%a8^Y~>
[/U++JcF0u!8iA-df0=)mJd2XMh1p.rrUpdhsULEhoGbI~>
[/U++JcF0u!8iA-df0=)mJd2XMh1p.rrUpdhsULEhoGbI~>
[/U++JcF0u!8iA-df0=)mJd2XMh1p.rrUpdhsULEhoGbI~>
[/U++JcC<$NrK0Y,ko+S!.Vfa!In@\s*t~>
[/U++JcC<$NrK0Y,ko+S!.Vfa!In@\s*t~>
[/U++JcC<$NrK0Y,ko+S!.Vfa!In@\s*t~>
[/U++JcC<$O8f:Q*4ruc!!'h7!q-iH[/YX~>
[/U++JcC<$O8f:Q*4ruc!!'h7!q-iH[/YX~>
[/U++JcC<$O8f:Q*4ruc!!'h7!q-iH[/YX~>
[/U++JcC<$O8f618A>*(!5JO8X#U!as*t~>
[/U++JcC<$O8f618A>*(!5JO8X#U!as*t~>
[/U++JcC<$O8f618A>*(!5JO8X#U!as*t~>
[/U++JcF0u!8iA-df0=)nG`RM'\gA%!!'b5!Ap_DrrCrss*t~>
[/U++JcF0u!8iA-df0=)nG`RM'\gA%!!'b5!Ap_DrrCrss*t~>
[/U++JcF0u!8iA-df0=)nG`RM'\gA%!!'b5!Ap_DrrCrss*t~>
[/U++JcF0u!5O0cdf0<_nG`MkE4u8O!5AI7_^+jDrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nG`MkE4u8O!5AI7_^+jDrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nG`MkE4u8O!5AI7_^+jDrrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nc&[2*:(<<!.V]^!E=^ArrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nc&[2*:(<<!.V]^!E=^ArrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nc&[2*:(<<!.V]^!E=^ArrBjTs*t~>
[/U++JcF0u!5O0cdf0<_nc&VLPC`c.rrUXXkOSWQ^rQJ*~>
[/U++JcF0u!5O0cdf0<_nc&VLPC`c.rrUXXkOSWQ^rQJ*~>
[/U++JcF0u!5O0cdf0<_nc&VLPC`c.rrUXXkOSWQ^rQJ*~>
[/U++JcF0u!5O0cdf0<_o)AcP0_^.upAY/@>k7mp^rQJ*~>
[/U++JcF0u!5O0cdf0<_o)AcP0_^.upAY/@>k7mp^rQJ*~>
[/U++JcF0u!5O0cdf0<_o)AcP0_^.upAY/@>k7mp^rQJ*~>
[/U++JcF0u!8iA-df0=)oD\mX'Z5M%p&>*^(sDON!8kisJ,~>
[/U++JcF0u!8iA-df0=)oD\mX'Z5M%p&>*^(sDON!8kisJ,~>
[/U++JcF0u!8iA-df0=)oD\mX'Z5M%p&>*^(sDON!8kisJ,~>
[/U++JcC<$PQ(Z"9Y16(J%P^]T0TpdJ,~>
[/U++JcC<$PQ(Z"9Y16(J%P^]T0TpdJ,~>
[/U++JcC<$PQ(Z"9Y16(J%P^]T0TpdJ,~>
[/U++JcC<$PlCg:#iE5n!!'V1!ALjjs*t~>
[/U++JcC<$PlCg:#iE5n!!'V1!ALjjs*t~>
[/U++JcC<$PlCg:#iE5n!!'V1!ALjjs*t~>
[/U++JcC<$PlCb`K=V!^!4r13a"7,!s*t~>
[/U++JcC<$PlCb`K=V!^!4r13a"7,!s*t~>
[/U++JcC<$PlCb`K=V!^!4r13a"7,!s*t~>
[/U++JcF0u!8iA-df0=)p&>*.+SWGH!!'S0!D&RMrrCrss*t~>
[/U++JcF0u!8iA-df0=)p&>*.+SWGH!!'S0!D&RMrrCrss*t~>
[/U++JcF0u!8iA-df0=)p&>*.+SWGH!!'S0!D&RMrrCrss*t~>
[/U++JcF0u!5O0cdf0<_pAY3k.$qID!!'S0!n.kHpAY-.a8^Y~>
[/U++JcF0u!5O0cdf0<_pAY3k.$qID!!'S0!n.kHpAY-.a8^Y~>
[/U++JcF0u!5O0cdf0<_pAY3k.$qID!!'S0!n.kHpAY-.a8^Y~>
^&J'4q>UEpJcF0u!5O0cdf0<_pAY2X3;^5c!.VNY!I/GSrrBjTs*t~>
^&J'4q>UEpJcF0u!5O0cdf0<_pAY2X3;^5c!.VNY!I/GSrrBjTs*t~>
^&J'4q>UEpJcF0u!5O0cdf0<_pAY2X3;^5c!.VNY!I/GSrrBjTs*t~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t<d(rq4-mJd7Z+P6Af!5QYTJ,~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t<d(rq4-mJd7Z+P6Af!5QYTJ,~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t<d(rq4-mJd7Z+P6Af!5QYTJ,~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t89=FpM<rrJTcp\t6/a8^Y~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t89=FpM<rrJTcp\t6/a8^Y~>
^&J'4q>UEpJcF0u!5O0cdf0<_p\t89=FpM<rrJTcp\t6/a8^Y~>
^&J'4q>UEpJcF0u!8iA-df0=)q#:EI'^(&Ili.%`.*),_!8kisJ,~>
^&J'4q>UEpJcF0u!8iA-df0=)q#:EI'^(&Ili.%`.*),_!8kisJ,~>
^&J'4q>UEpJcF0u!8iA-df0=)q#:EI'^(&Ili.%`.*),_!8kisJ,~>
^&J'4q>UEpJcC<$R/[1dO1"ufJ%#@Y[l!urs*t~>
^&J'4q>UEpJcC<$R/[1dO1"ufJ%#@Y[l!urs*t~>
^&J'4q>UEpJcC<$R/[1dO1"ufJ%#@Y[l!urs*t~>
^&J'4q>UEpJcC<$RK!>t,kn_H!!'G,!DJ]ks*t~>
^&J'4q>UEpJcC<$RK!>t,kn_H!!'G,!DJ]ks*t~>
^&J'4q>UEpJcC<$RK!>t,kn_H!!'G,!DJ]ks*t~>
^&J'4q>UEpJcC<$Rf<Hd,cA$L!!'G,!okQt^]/f~>
^&J'4q>UEpJcC<$Rf<Hd,cA$L!!'G,!okQt^]/f~>
^&J'4q>UEpJcC<$Rf<Hd,cA$L!!'G,!okQt^]/f~>
^&J'4q>UEpJcF0u!8iA-df0=)qYpVd3;^)_!!'D+!Gm#WrrCrss*t~>
^&J'4q>UEpJcF0u!8iA-df0=)qYpVd3;^)_!!'D+!Gm#WrrCrss*t~>
^&J'4q>UEpJcF0u!8iA-df0=)qYpVd3;^)_!!'D+!Gm#WrrCrss*t~>
_Z'TUrVlj$q>UEpJcF0u!5O0cdf0<_qu6``(t5hk!!'D+!p^]Pqu6Z3a8^Y~>
_Z'TUrVlj$q>UEpJcF0u!5O0cdf0<_qu6``(t5hk!!'D+!p^]Pqu6Z3a8^Y~>
_Z'TUrVlj$q>UEpJcF0u!5O0cdf0<_qu6``(t5hk!!'D+!p^]Pqu6Z3a8^Y~>
_Z'cVk5YJW*;TU7!.k0urrBics3goI_#+-4CiH][!.V?T!LHd_rrBjTs*t~>
_Z'cVk5YJW*;TU7!.k0urrBics3goI_#+-4CiH][!.V?T!LHd_rrBjTs*t~>
_Z'cVk5YJW*;TU7!.k0urrBics3goI_#+-4CiH][!.V?T!LHd_rrBjTs*t~>
_Z0XU"9&7mFnu%;!.k0urrBics3goI_#436gDoO1s5X+\q_5qcrrBjTs*t~>
_Z0XU"9&7mFnu%;!.k0urrBics3goI_#436gDoO1s5X+\q_5qcrrBjTs*t~>
_Z0XU"9&7mFnu%;!.k0urrBics3goI_#436gDoO1s5X+\q_5qcrrBjTs*t~>
_Z'f2?j?pRp\Fgh!.k0urrBics3goI_#435<2Y<IiVrtk2#I7O!5QYTJ,~>
_Z'f2?j?pRp\Fgh!.k0urrBics3goI_#435<2Y<IiVrtk2#I7O!5QYTJ,~>
_Z'f2?j?pRp\Fgh!.k0urrBics3goI_#435<2Y<IiVrtk2#I7O!5QYTJ,~>
[/U++JcF0u!8iA-df0=)rVlr&,l</mi;WgCVu?VqhoGbI~>
[/U++JcF0u!8iA-df0=)rVlr&,l</mi;WgCVu?VqhoGbI~>
[/U++JcF0u!8iA-df0=)rVlr&,l</mi;WgCVu?VqhoGbI~>
[/U++JcC<$T)Slh.(?G\!.V9R!o#-p_uG5~>
[/U++JcC<$T)Slh.(?G\!.V9R!o#-p_uG5~>
[/U++JcC<$T)Slh.(?G\!.V9R!o#-p_uG5~>
[/U++JcC<$T)ShX:p9m!!3lJ(G]^k'J,~>
[/U++JcC<$T)ShX:p9m!!3lJ(G]^k'J,~>
[/U++JcC<$T)ShX:p9m!!3lJ(G]^k'J,~>
[/U++JcC<$TDnua*7qCo!!'8'!qRQ#`;b>~>
[/U++JcC<$TDnua*7qCo!!'8'!qRQ#`;b>~>
[/U++JcC<$TDnua*7qCo!!'8'!qRQ#`;b>~>
[/U++JcF0u!8iA-df0I-s8Qn_Y5\J%YQ"`h@/p8aa8^Y~>
[/U++JcF0u!8iA-df0I-s8Qn_Y5\J%YQ"`h@/p8aa8^Y~>
[/U++JcF0u!8iA-df0I-s8Qn_Y5\J%YQ"`h@/p8aa8^Y~>
[/U++JcF0u!5O0cdf0Hcs5,7!Y5\J%YQ"b&.*MY+a8^Y~>
[/U++JcF0u!5O0cdf0Hcs5,7!Y5\J%YQ"b&.*MY+a8^Y~>
[/U++JcF0u!5O0cdf0Hcs5,7!Y5\J%YQ"b&.*MY+a8^Y~>
[/U++JcF0u!5O0cdf0Ebs%K>mrr@POrr]Gqs1l\TJ,~>
[/U++JcF0u!5O0cdf0Ebs%K>mrr@POrr]Gqs1l\TJ,~>
[/U++JcF0u!5O0cdf0Ebs%K>mrr@POrr]Gqs1l\TJ,~>
[f6K/(]Y5=JcF7"!5O0ceGf]2&-<Ffqgne"rrbD#!t9=os*t~>
[f6K/(]Y5=JcF7"!5O0ceGf]2&-<Ffqgne"rrbD#!t9=os*t~>
[f6K/(]Y5=JcF7"!5O0ceGf]2&-<Ffqgne"rrbD#!t9=os*t~>
\,QK2"o\K&"f$YKec,WbJcF:#!J:FP!!*J.JcFF'!OEC:!!$TQs*t~>
\,QK2"o\K&"f$YKec,WbJcF:#!J:FP!!*J.JcFF'!OEC:!!$TQs*t~>
\,QK2"o\K&"f$YKec,WbJcF:#!J:FP!!*J.JcFF'!OEC:!!$TQs*t~>
\,QFNqu?^6JcF:#!8iA-ec,UXr;Zj&-%Z*LrrFqkr;Zg#b5Zt~>
\,QFNqu?^6JcF:#!8iA-ec,UXr;Zj&-%Z*LrrFqkr;Zg#b5Zt~>
\,QFNqu?^6JcF:#!8iA-ec,UXr;Zj&-%Z*LrrFqkr;Zg#b5Zt~>
s1eWlrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ej
rr2uUrP/C8qu?g$^qek,rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]E<oJH3mo!WV'U^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9ks*t~>
s1eWlrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ej
rr2uUrP/C8qu?g$^qek,rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]E<oJH3mo!WV'U^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9ks*t~>
s1eWlrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ejrr2uUrP/Ej
rr2uUrP/C8qu?g$^qek,rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9k
rrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9krrCsT^]E<oJH3mo!WV'U^]<9krrCsT^]<9krrCsT^]<9krrCsT^]<9krrCsT
^]<9krrCsT^]<9ks*t~>
\,QIY"8r3"+G'QDs/>qt)#XF8,q#hp!!'2%!Am%>!!!GMs*t~>
\,QIY"8r3"+G'QDs/>qt)#XF8,q#hp!!'2%!Am%>!!!GMs*t~>
\,QIY"8r3"+G'QDs/>qt)#XF8,q#hp!!'2%!Am%>!!!GMs*t~>
\,QZ=&d\OB&Z^K_JcD\K#-/%1!#$9OXoAA$Y5\^4*@_$h#F<O4J,~>
\,QZ=&d\OB&Z^K_JcD\K#-/%1!#$9OXoAA$Y5\^4*@_$h#F<O4J,~>
\,QZ=&d\OB&Z^K_JcD\K#-/%1!#$9OXoAA$Y5\^4*@_$h#F<O4J,~>
[f6K:0*!8uJcF7"!8iA-eGfZX.KCfrXT&8#XoAO11]SVrao?k~>
[f6K:0*!8uJcF7"!8iA-eGfZX.KCfrXT&8#XoAO11]SVrao?k~>
[f6K:0*!8uJcF7"!8iA-eGfZX.KCfrXT&8#XoAO11]SVrao?k~>
[/U++JcF0u!5O0chu<b_!3u:u!!'&!!!')"!!((>J,~>
[/U++JcF0u!5O0chu<b_!3u:u!!'&!!!')"!!((>J,~>
[/U++JcF0u!5O0chu<b_!3u:u!!'&!!!')"!!((>J,~>
[/U++JcF0u!5O0chu<aa>$Uh%!+;i,!.V'L!+<kIJ,~>
[/U++JcF0u!5O0chu<aa>$Uh%!+;i,!.V'L!+<kIJ,~>
[/U++JcF0u!5O0chu<aa>$Uh%!+;i,!.V'L!+<kIJ,~>
[/U++JcF0u!5O0ci;WrY&bQ\5q#:?0JcF4!!5SC0qu?d)/Vr'ZJ,~>
[/U++JcF0u!5O0ci;WrY&bQ\5q#:?0JcF4!!5SC0qu?d)/Vr'ZJ,~>
[/U++JcF0u!5O0ci;WrY&bQ\5q#:?0JcF4!!5SC0qu?d)/Vr'ZJ,~>
[/U++JcF0u!5O0ci;Wqd:]F4sq#:?0JcF4!!5SC0!!)ut"9$bAU=oQs~>
[/U++JcF0u!5O0ci;Wqd:]F4sq#:?0JcF4!!5SC0!!)ut"9$bAU=oQs~>
[/U++JcF0u!5O0ci;Wqd:]F4sq#:?0JcF4!!5SC0!!)ut"9$bAU=oQs~>
[/U++JcF0u!8iA-i;WpfUAploq#:?OJcF4!!8mSO!!)or!UM8gs*t~>
[/U++JcF0u!8iA-i;WpfUAploq#:?OJcF4!!8mSO!!)or!UM8gs*t~>
[/U++JcF0u!8iA-i;WpfUAploq#:?OJcF4!!8mSO!!)or!UM8gs*t~>
[/U++JcC<$Z2Y%,&ao\h&,l>(!.V$K!.V'L!.XeD!!)or!V%;cs*t~>
[/U++JcC<$Z2Y%,&ao\h&,l>(!.V$K!.V'L!.XeD!!)or!V%;cs*t~>
[/U++JcC<$Z2Y%,&ao\h&,l>(!.V$K!.V'L!.XeD!!)or!V%;cs*t~>
[/U++JcC<$Z2Xj86N6uc7(<!l!!'&!!!')"!!)fo!!)ut"9$bEZ.]/-~>
[/U++JcC<$Z2Xj86N6uc7(<!l!!'&!!!')"!!)fo!!)ut"9$bEZ.]/-~>
[/U++JcC<$Z2Xj86N6uc7(<!l!!'&!!!')"!!)fo!!)ut"9$bEZ.]/-~>
[/U++JcC<$Z2Xf5qu?_-q>UEpWrE&!X8`/"q#C0j!H[PZs*t~>
[/U++JcC<$Z2Xf5qu?_-q>UEpWrE&!X8`/"q#C0j!H[PZs*t~>
[/U++JcC<$Z2Xf5qu?_-q>UEpWrE&!X8`/"q#C0j!H[PZs*t~>
[/U++JcF0u!8iA-ir9)Y&a95o!pUKuqYpNqWrE&!X8`/"q#:<or;QiZDkbqbJ,~>
[/U++JcF0u!8iA-ir9)Y&a95o!pUKuqYpNqWrE&!X8`/"q#:<or;QiZDkbqbJ,~>
[/U++JcF0u!8iA-ir9)Y&a95o!pUKuqYpNqWrE&!X8`/"q#:<or;QiZDkbqbJ,~>
[/U++JcF0u!5O0cir9%i:&P"l9tU9%!!'&!!!')"!!)fo!!)or!VoUGs*t~>
[/U++JcF0u!5O0cir9%i:&P"l9tU9%!!'&!!!')"!!)fo!!)or!VoUGs*t~>
[/U++JcF0u!5O0cir9%i:&P"l9tU9%!!'&!!!')"!!)fo!!)or!VoUGs*t~>
[/U++JcF0u!5O0cir9$kZ2FV&Y@dY2!+;i,!.V'L!+>U%!!)lq!"%?YJ,~>
[/U++JcF0u!5O0cir9$kZ2FV&Y@dY2!+;i,!.V'L!+>U%!!)lq!"%?YJ,~>
[/U++JcF0u!5O0cir9$kZ2FV&Y@dY2!+;i,!.V'L!+>U%!!)lq!"%?YJ,~>
[/U++JcF0u!5O0cj8T2Z/,fDG!W=JDrrBics3puJ_"dp0!;lcsdlc=`J,~>
[/U++JcF0u!5O0cj8T2Z/,fDG!W=JDrrBics3puJ_"dp0!;lcsdlc=`J,~>
[/U++JcF0u!5O0cj8T2Z/,fDG!W=JDrrBics3puJ_"dp0!;lcsdlc=`J,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5SC0!!)rs!lch"g&HR~>
[/U++JcF0u!5O0cdf0<_JcF4!!5SC0!!)rs!lch"g&HR~>
[/U++JcF0u!5O0cdf0<_JcF4!!5SC0!!)rs!lch"g&HR~>
[/U++JcF0u!8iA-df0=)JcF4!!8mSOqu?d)6FYVIJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8mSOqu?d)6FYVIJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8mSOqu?d)6FYVIJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!8iA-df0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0:IWrE&!X8`/"a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0;TWrE'KX8`0-a8^Y~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk4CWrE'KX8`0La8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[/U++JcC<$UAk2nWrE&!X8`/"a8^Y~>
[f6Jh$NLH_JcF=$"F(.O$]T`;f)Gkq&-E]AY5\WD&-EcCYQ"d2+9N'ap<*Dc~>
[f6Jh$NLH_JcF=$"F(.O$]T`;f)Gkq&-E]AY5\WD&-EcCYQ"d2+9N'ap<*Dc~>
[f6Jh$NLH_JcF=$"F(.O$]T`;f)Gkq&-E]AY5\WD&-EcCYQ"d2+9N'ap<*Dc~>
\,QK'!r`0#!gnQ=f`(u:!WE'""J^PJf`)/)#r=t,&?E&8#(?k76o>OVZ2Y$7'Ji-7$"_9ZJ,~>
\,QK'!r`0#!gnQ=f`(u:!WE'""J^PJf`)/)#r=t,&?E&8#(?k76o>OVZ2Y$7'Ji-7$"_9ZJ,~>
\,QK'!r`0#!gnQ=f`(u:!WE'""J^PJf`)/)#r=t,&?E&8#(?k76o>OVZ2Y$7'Ji-7$"_9ZJ,~>
\,QFJqu?^3JcFC&!#GJ4!#gFgf`(sd1]BcC2'oL,!>I?h6if.kZ2Xh]3rVMJ2%7Y-J,~>
\,QFJqu?^3JcFC&!#GJ4!#gFgf`(sd1]BcC2'oL,!>I?h6if.kZ2Xh]3rVMJ2%7Y-J,~>
\,QFJqu?^3JcFC&!#GJ4!#gFgf`(sd1]BcC2'oL,!>I?h6if.kZ2Xh]3rVMJ2%7Y-J,~>
JH16$JH4:%!!N3fY5eP*r'[^g!(-WP!!::CJ,~>
JH16$JH4:%!!N3fY5eP*r'[^g!(-WP!!::CJ,~>
JH16$JH4:%!!N3fY5eP*r'[^g!(-WP!!::CJ,~>
\,QI\#6"T'"sSWuf`(t$"9&9$&1)o-f`(sr1]BcC>UZiV!?s?!6igO@Z2Xh]D#Qg'2&=@7J,~>
\,QI\#6"T'"sSWuf`(t$"9&9$&1)o-f`(sr1]BcC>UZiV!?s?!6igO@Z2Xh]D#Qg'2&=@7J,~>
\,QI\#6"T'"sSWuf`(t$"9&9$&1)o-f`(sr1]BcC>UZiV!?s?!6igO@Z2Xh]D#Qg'2&=@7J,~>
\,QZ=)(,D1(or5ff`)/^'c6p+)QSGhf`)/^'g+lm*ilOF#.#")7r06IZ2Y$7+E^:;';`kOJ,~>
\,QZ=)(,D1(or5ff`)/^'c6p+)QSGhf`)/^'g+lm*ilOF#.#")7r06IZ2Y$7+E^:;';`kOJ,~>
\,QZ=)(,D1(or5ff`)/^'c6p+)QSGhf`)/^'g+lm*ilOF#.#")7r06IZ2Y$7+E^:;';`kOJ,~>
[f6K:1]Sr)JcF=$"LBoe.'%q!f)GlZ1]o/,Y5\X21^GM1YQ"a31]o/,ao?k~>
[f6K:1]Sr)JcF=$"LBoe.'%q!f)GlZ1]o/,Y5\X21^GM1YQ"a31]o/,ao?k~>
[f6K:1]Sr)JcF=$"LBoe.'%q!f)GlZ1]o/,Y5\X21^GM1YQ"a31]o/,ao?k~>
[/U++JcF0u!.]Y#df0;tJcF4!!.`,iJ,~>
[/U++JcF0u!.]Y#df0;tJcF4!!.`,iJ,~>
[/U++JcF0u!.]Y#df0;tJcF4!!.`,iJ,~>
`W$+N4p_H\\b?%'!.k0$s+13$s1&)Z~>
`W$+N4p_H\\b?%'!.k0$s+13$s1&)Z~>
`W$+N4p_H\\b?%'!.k0$s+13$s1&)Z~>
`r?:+-b''Q[j@74rr<%Ms+13$s+13[s*t~>
`r?:+-b''Q[j@74rr<%Ms+13$s+13[s*t~>
`r?:+-b''Q[j@74rr<%Ms+13$s+13[s*t~>
a8Z4k,4>F0!pUcWq#:<oJcFR+!!)cn!8iA-df0=)r;Qo`J7*BCJcFR+!8m\R"R(boD8Oa$J,~>
a8Z4k,4>F0!pUcWq#:<oJcFR+!!)cn!8iA-df0=)r;Qo`J7*BCJcFR+!8m\R"R(boD8Oa$J,~>
a8Z4k,4>F0!pUcWq#:<oJcFR+!!)cn!8iA-df0=)r;Qo`J7*BCJcFR+!8m\R"R(boD8Oa$J,~>
a8Z0PSGW<ePA0gl!!%TMh>[HTp\t6/JcF0u!5SR5#1mqhs0iGlJcFU,!5SO4#1\D(s6:MMe,Op~>
a8Z0PSGW<ePA0gl!!%TMh>[HTp\t6/JcF0u!5SR5#1mqhs0iGlJcFU,!5SO4#1\D(s6:MMe,Op~>
a8Z0PSGW<ePA0gl!!%TMh>[HTp\t6/JcF0u!5SR5#1mqhs0iGlJcFU,!5SO4#1\D(s6:MMe,Op~>
a8Z/djSSrXi[+C"!!%TMh>[HTp\t6/JcF0u!5SR5!FG[&rrRoTdt.PVrrBk4rs)pIh>dL]!:eS=
J,~>
a8Z/djSSrXi[+C"!!%TMh>[HTp\t6/JcF0u!5SR5!FG[&rrRoTdt.PVrrBk4rs)pIh>dL]!:eS=
J,~>
a8Z/djSSrXi[+C"!!%TMh>[HTp\t6/JcF0u!5SR5!FG[&rrRoTdt.PVrrBk4rs)pIh>dL]!:eS=
J,~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVllu-iX,I\H%P=s53hV_#43;O!*N`s'>]seGk%~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVllu-iX,I\H%P=s53hV_#43;O!*N`s'>]seGk%~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVllu-iX,I\H%P=s53hV_#43;O!*N`s'>]seGk%~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVln#EW5t>\H%Aqrs&FRchmIKTWS4o_"[j000[kb
J,~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVln#EW5t>\H%Aqrs&FRchmIKTWS4o_"[j000[kb
J,~>
a8Z,Cq>UF"q#:<oJcFR+!!)cn!5O0cdf0<_rVln#EW5t>\H%Aqrs&FRchmIKTWS4o_"[j000[kb
J,~>
a8Z/_kkkA\js'U#!!%TMh>[HTp\t6NJcF0u!8mSO!fI'+])Md+r;ZjIi3!"Zht[3QOYc4Ms*t~>
a8Z/_kkkA\js'U#!!%TMh>[HTp\t6NJcF0u!8mSO!fI'+])Md+r;ZjIi3!"Zht[3QOYc4Ms*t~>
a8Z/_kkkA\js'U#!!%TMh>[HTp\t6NJcF0u!8mSO!fI'+])Md+r;ZjIi3!"Zht[3QOYc4Ms*t~>
a8Z0UQi$d`QYH6p!!%TMh>[HTJcEIa!r!aM\c2j/7uMi&rM9GqU1l`edf4g~>
a8Z0UQi$d`QYH6p!!%TMh>[HTJcEIa!r!aM\c2j/7uMi&rM9GqU1l`edf4g~>
a8Z0UQi$d`QYH6p!!%TMh>[HTJcEIa!r!aM\c2j/7uMi&rM9GqU1l`edf4g~>
a8Z4o*:!M&!pUiUq#:<oJcFR+!!%TM^Ae4L;7QW,q.lT%!rFlIe,Op~>
a8Z4o*:!M&!pUiUq#:<oJcFR+!!%TM^Ae4L;7QW,q.lT%!rFlIe,Op~>
a8Z4o*:!M&!pUiUq#:<oJcFR+!!%TM^Ae4L;7QW,q.lT%!rFlIe,Op~>
`r?:6-+3^MZR(b.rr<%Ms5!\T!.k0brrJWt\,QL)CRtJ,ScG;1s*t~>
`r?:6-+3^MZR(b.rr<%Ms5!\T!.k0brrJWt\,QL)CRtJ,ScG;1s*t~>
`r?:6-+3^MZR(b.rr<%Ms5!\T!.k0brrJWt\,QL)CRtJ,ScG;1s*t~>
`W$+Y63d`^]Cu7)!.k1+rr<&nrrCr-s3goIhu!ESZ[i&T!8"g^#5M2YQ\'AWXoACYrVlrtEM3=2
!jr#3eGk%~>
`W$+Y63d`^]Cu7)!.k1+rr<&nrrCr-s3goIhu!ESZ[i&T!8"g^#5M2YQ\'AWXoACYrVlrtEM3=2
!jr#3eGk%~>
`W$+Y63d`^]Cu7)!.k1+rr<&nrrCr-s3goIhu!ESZ[i&T!8"g^#5M2YQ\'AWXoACYrVlrtEM3=2
!jr#3eGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_r;Qf;PQ(R_o;9,!!W-@*rrI%AXoAC:rVlrF!#kk:!j;T7eGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_r;Qf;PQ(R_o;9,!!W-@*rrI%AXoAC:rVlrF!#kk:!j;T7eGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_r;Qf;PQ(R_o;9,!!W-@*rrI%AXoAC:rVlrF!#kk:!j;T7eGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_rVloM9Dt@]9=qV3!jr$PY5\L;rVlrr1!9Lq!c\=ieGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_rVloM9Dt@]9=qV3!jr$PY5\L;rVlrr1!9Lq!c\=ieGk%~>
[/U++JcFR+!!)cn!5O0cdf0<_rVloM9Dt@]9=qV3!jr$PY5\L;rVlrr1!9Lq!c\=ieGk%~>
[/U++JcF0u!5O0cdf0<_rVlj9qZ$Wl[Jp<]!/n#[!5SO4#0:D_nY-l,e,Op~>
[/U++JcF0u!5O0cdf0<_rVlj9qZ$Wl[Jp<]!/n#[!5SO4#0:D_nY-l,e,Op~>
[/U++JcF0u!5O0cdf0<_rVlj9qZ$Wl[Jp<]!/n#[!5SO4#0:D_nY-l,e,Op~>
[/U++JcF0u!5O0cdf0<_Y5\M@>5nO'gAlH#rrBk3rri;.Up'O@s*t~>
[/U++JcF0u!5O0cdf0<_Y5\M@>5nO'gAlH#rrBk3rri;.Up'O@s*t~>
[/U++JcF0u!5O0cdf0<_Y5\M@>5nO'gAlH#rrBk3rri;.Up'O@s*t~>
[/U++JcF0u!8iA-df0=)Y5\MFOoG@^[/dJ7rrCrss*t~>
[/U++JcF0u!8iA-df0=)Y5\MFOoG@^[/dJ7rrCrss*t~>
[/U++JcF0u!8iA-df0=)Y5\MFOoG@^[/dJ7rrCrss*t~>
[/U++JcC<$JcF$q!JL4HrrRR"rIP"?s*t~>
[/U++JcC<$JcF$q!JL4HrrRR"rIP"?s*t~>
[/U++JcC<$JcF$q!JL4HrrRR"rIP"?s*t~>
[/U++JcC<$JcF$q#4-'<lA[dcJcG<@J,~>
[/U++JcC<$JcF$q#4-'<lA[dcJcG<@J,~>
[/U++JcC<$JcF$q#4-'<lA[dcJcG<@J,~>
[/U++JcC<$JcEso!k5&FJcG6>J,~>
[/U++JcC<$JcEso!k5&FJcG6>J,~>
[/U++JcC<$JcEso!k5&FJcG6>J,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcF'r!;cNc!;V3Go`'F~>
[/U++JcC<$JcF'r!;cNc!;V3Go`'F~>
[/U++JcC<$JcF'r!;cNc!;V3Go`'F~>
[/U++JcC<$JcF'r!."B/!,dAfo`'F~>
[/U++JcC<$JcF'r!."B/!,dAfo`'F~>
[/U++JcC<$JcF'r!."B/!,dAfo`'F~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_XoAOfJ7*BCXT&:9a8^Y~>
[/U++JcF0u!5O0cdf0<_XoAOfJ7*BCXT&:9a8^Y~>
[/U++JcF0u!5O0cdf0<_XoAOfJ7*BCXT&:9a8^Y~>
[/U++JcF0u!5O0cdf0<_Y5\^XF7oRB%>M"b!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_Y5\^XF7oRB%>M"b!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_Y5\^XF7oRB%>M"b!5QYTJ,~>
[/U++JcF0u!8iA-df0=)Y5\N/qu6TsL&f]*rrCrss*t~>
[/U++JcF0u!8iA-df0=)Y5\N/qu6TsL&f]*rrCrss*t~>
[/U++JcF0u!8iA-df0=)Y5\N/qu6TsL&f]*rrCrss*t~>
[/U++JcC<$JcF$q!<=MHrrT_2Mh1p"s*t~>
[/U++JcC<$JcF$q!<=MHrrT_2Mh1p"s*t~>
[/U++JcC<$JcF$q!<=MHrrT_2Mh1p"s*t~>
[/U++JcC<$JcF$q!Ea@@rrT_2L4TBrs*t~>
[/U++JcC<$JcF$q!Ea@@rrT_2L4TBrs*t~>
[/U++JcC<$JcF$q!Ea@@rrT_2L4TBrs*t~>
[/U++JcC<$JcEjl!fI'+JcG?AJ,~>
[/U++JcC<$JcEjl!fI'+JcG?AJ,~>
[/U++JcC<$JcEjl!fI'+JcG?AJ,~>
[/U++JcF0u!8iA-df0=)WrE.p*bhbV!8kisJ,~>
[/U++JcF0u!8iA-df0=)WrE.p*bhbV!8kisJ,~>
[/U++JcF0u!8iA-df0=)WrE.p*bhbV!8kisJ,~>
[/U++JcF0u!5O0cdf0<_WrE*8;69ct^rQJ*~>
[/U++JcF0u!5O0cdf0<_WrE*8;69ct^rQJ*~>
[/U++JcF0u!5O0cdf0<_WrE*8;69ct^rQJ*~>
[/U++JcF0u!5O0cdf0<_X8`3j@&s;-^rQJ*~>
[/U++JcF0u!5O0cdf0<_X8`3j@&s;-^rQJ*~>
[/U++JcF0u!5O0cdf0<_X8`3j@&s;-^rQJ*~>
[/U++JcF0u!5O0cdf0<_XT&=-JH#QKf<5,R^rQJ*~>
[/U++JcF0u!5O0cdf0<_XT&=-JH#QKf<5,R^rQJ*~>
[/U++JcF0u!5O0cdf0<_XT&=-JH#QKf<5,R^rQJ*~>
[/U++JcF0u!5O0cdf0<_XoAFAPQ(R_o;8\j!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_XoAFAPQ(R_o;8\j!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_XoAFAPQ(R_o;8\j!5QYTJ,~>
[/U++JcF0u!8iA-df0=)Y5\OS9Dt@]9=qA,!8kisJ,~>
[/U++JcF0u!8iA-df0=)Y5\OS9Dt@]9=qA,!8kisJ,~>
[/U++JcF0u!8iA-df0=)Y5\OS9Dt@]9=qA,!8kisJ,~>
[/U++JcC<$JcF$q!#k_7!;V3GoDa=~>
[/U++JcC<$JcF$q!#k_7!;V3GoDa=~>
[/U++JcC<$JcF$q!#k_7!;V3GoDa=~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcC<$JcC<$\Gq'~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!8iA-df0=)JcF4!!8kisJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
[/U++JcF0u!5O0cdf0<_JcF4!!5QYTJ,~>
%%EndData
showpage
%%Trailer
end
%%EOF

%%EndDocument
 @endspecial -3276 21727 a(D)-34 b(\023)-572 b(emon)-34
b(trer)405 b(que)e(le)h(triangle)g Fc(AB)61 b(C)491 b
Fd(est)371 b(\023)-572 b(equilat)-34 b(\023)-572 b(eral.)-3276
26243 y Fe(Exercice)464 b(6)g(:)h(co)39 b(ordonn)-29
b(\023)-668 b(ees)465 b(du)g(milieu)g(d'un)h(segmen)-39
b(t)p -3276 26673 29900 49 v -3276 28379 a Fd(Soit)405
b(\()p Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b
Fd(\))403 b(un)i(rep)-34 b(\022)-572 b(ere)403 b(quelconque)h(du)h
(plan.)p 0 TeXcolorgray -1794 30302 a(1.)p 0 TeXcolorgray
606 w(Soien)-34 b(t)405 b Fc(E)70 b Fd(\()p Fa(\000)p
Fd(2;)202 b(3\))404 b(et)g Fc(F)168 b Fd(\(5;)202 b Fa(\000)p
Fd(7\).)p 0 TeXcolorgray -264 32225 a Fc(a:)p 0 TeXcolorgray
605 w Fd(Calculer)404 b(les)f(co)34 b(ordonn)-34 b(\023)-572
b(ees)404 b(du)h(milieu)f Fc(A)g Fd(de)g([)p Fc(E)70
b(F)168 b Fd(].)p 0 TeXcolorgray -144 34147 a Fc(b:)p
0 TeXcolorgray 606 w Fd(Calculer)404 b(les)f(co)34 b(ordonn)-34
b(\023)-572 b(ees)404 b(du)h(p)34 b(oin)-34 b(t)405 b
Fc(B)465 b Fd(sym)-34 b(\023)-572 b(etrique)404 b(de)g
Fc(E)474 b Fd(par)404 b(rapp)34 b(ort)404 b(\022)-606
b(a)405 b Fc(F)168 b Fd(.)p 0 TeXcolorgray -1794 36669
a(2.)p 0 TeXcolorgray 606 w(Soien)-34 b(t)405 b Fc(C)4580
34960 y Fb(\022)5605 35849 y Fd(4)p 5605 36390 607 49
v 5605 37500 a(5)6344 36669 y(;)202 b(2)7489 34960 y
Fb(\023)8785 36669 y Fd(et)404 b Fc(D)11438 34960 y Fb(\022)12330
36669 y Fa(\000)p Fd(2;)14551 35849 y(3)p 14551 36390
V 14551 37500 a(4)15290 34960 y Fb(\023)16182 36669 y
Fd(.)g(Calculer)f(les)h(co)34 b(ordonn)-34 b(\023)-572
b(ees)404 b(du)h(milieu)e Fc(M)536 b Fd(de)404 b([)p
Fc(C)87 b(D)34 b Fd(].)-3276 40973 y Fe(Exercice)464
b(7)g(:)h(co)39 b(ordonn)-29 b(\023)-668 b(ees)465 b(du)g(milieu)g
(d'un)h(segmen)-39 b(t)p -3276 41403 29900 49 v -3276
44313 a Fd(Soit)405 b(\()p Fc(O)34 b Fd(;)202 b Fc(I)95
b(;)202 b(J)117 b Fd(\))403 b(un)i(rep)-34 b(\022)-572
b(ere)403 b(quelconque)h(du)h(plan)f(et)g(soien)-34 b(t)405
b Fc(A)26116 42240 y Fb( )27209 42490 y Fa(p)p 28219
42490 607 49 v 1003 x Fd(2)269 b(+)g(1)p 27209 44034
3704 49 v 27209 44277 a Fa(p)p 28219 44277 607 49 v 1002
x Fd(2)g Fa(\000)g Fd(1)31449 44313 y(;)32392 43251 y
Fa(p)p 33402 43251 V 1062 x Fd(3)34008 42240 y Fb(!)35372
44313 y Fd(et)404 b Fc(B)37968 42604 y Fb(\022)38860
44313 y Fa(\000)p Fd(3)270 b Fa(\000)f Fd(2)42497 43310
y Fa(p)p 43507 43310 V 1003 x Fd(2;)45289 43493 y(3)p
44784 44034 1617 49 v 44784 44277 a Fa(p)p 45795 44277
607 49 v 45795 45279 a Fd(3)46533 42604 y Fb(\023)47426
44313 y Fd(.)-3276 46848 y(Calculer)404 b(les)g(co)34
b(ordonn)-34 b(\023)-572 b(ees)404 b(du)g(milieu)g Fc(P)572
b Fd(de)405 b([)p Fc(AB)61 b Fd(].)-3276 49859 y Fe(Exercice)464
b(8)g(:)h(m)-29 b(\023)-668 b(ediatrice)p -3276 50053
14010 49 v -3276 51994 a Fd(Soit)645 b(\()p Fc(O)34 b
Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b Fd(\))643 b(un)h(rep)-34
b(\022)-572 b(ere)643 b(orthonorm)-34 b(\023)-572 b(e)644
b(du)h(plan.)g(On)f(consid)-34 b(\022)-572 b(ere)644
b(les)f(p)34 b(oin)-34 b(ts)645 b Fc(A)p Fd(\()p Fa(\000)p
Fd(2;)202 b Fa(\000)p Fd(1\),)644 b Fc(B)61 b Fd(\(2;)202
b(3\),)644 b Fc(C)87 b Fd(\()p Fa(\000)p Fd(2;)202 b(3\))644
b(et)-3276 53500 y Fc(D)34 b Fd(\(3;)202 b Fa(\000)p
Fd(2\).)404 b(D)-34 b(\023)-572 b(emon)-34 b(trer)404
b(que)g(la)g(droite)g(\()p Fc(C)87 b(D)34 b Fd(\))404
b(est)g(la)g(m)-34 b(\023)-572 b(ediatrice)403 b(de)h([)p
Fc(AB)61 b Fd(].)-3276 58016 y Fe(Exercice)464 b(9)g(:)h(losange)p
-3276 58446 12030 49 v -3276 60151 a Fd(Soit)372 b(\()p
Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202 b(J)117 b Fd(\))370
b(un)i(rep)-34 b(\022)-572 b(ere)370 b(orthonorm)-34
b(\023)-572 b(e)371 b(du)h(plan.)f(Soien)-34 b(t)372
b Fc(D)34 b Fd(\(4;)202 b Fa(\000)p Fd(3\),)370 b Fc(E)70
b Fd(\(3;)202 b(1\),)371 b Fc(F)168 b Fd(\(0;)202 b Fa(\000)p
Fd(2\))372 b(et)f Fc(G)p Fd(\()p Fa(\000)p Fd(1;)202
b(2\).)371 b(D)-34 b(\023)-572 b(emon)-34 b(trer)371
b(que)-3276 61657 y Fc(F)168 b(GE)70 b(D)438 b Fd(est)404
b(un)h(losange.)-3276 66173 y Fe(Exercice)464 b(10)g(:)h
(exercice-bilan)p -3276 66367 16623 49 v -3276 68309
a Fd(Soit)405 b(\()p Fc(O)34 b Fd(;)202 b Fc(I)95 b(;)202
b(J)117 b Fd(\))403 b(un)i(rep)-34 b(\022)-572 b(ere)403
b(orthonorm)-34 b(\023)-572 b(e.)405 b(Soien)-34 b(t)405
b Fc(A)p Fd(\(1;)202 b(6\),)404 b Fc(B)61 b Fd(\()p Fa(\000)p
Fd(3;)202 b(3\),)404 b Fc(C)87 b Fd(\(3;)202 b(0\),)405
b Fc(D)34 b Fd(\()p Fa(\000)p Fd(1;)202 b(2\),)403 b
Fc(E)70 b Fd(\()p Fa(\000)p Fd(3;)202 b(1\))404 b(et)g
Fc(F)168 b Fd(\()p Fa(\000)p Fd(5;)202 b(2\).)p 0 TeXcolorgray
-1794 70232 a(1.)p 0 TeXcolorgray 606 w(D)-34 b(\023)-572
b(emon)-34 b(trer)404 b(de)g(deux)g(mani)-34 b(\022)-572
b(eres)404 b(di\013)-34 b(\023)-572 b(eren)-34 b(tes)404
b(que)g Fc(D)437 b Fd(appartien)-34 b(t)406 b(au)f(cercle)d(de)i(diam)
-34 b(\022)-572 b(etre)404 b([)p Fc(AC)87 b Fd(].)p 0
TeXcolorgray -1794 72155 a(2.)p 0 TeXcolorgray 606 w(D)-34
b(\023)-572 b(emon)-34 b(trer)404 b(que)g Fc(D)34 b(E)70
b(F)168 b(B)465 b Fd(est)404 b(un)h(parall)-34 b(\023)-572
b(elogramme.)p 0 TeXcolorgray -1794 74078 a(3.)p 0 TeXcolorgray
606 w(Calculer)403 b Fc(D)34 b(B)465 b Fd(et)404 b Fc(D)34
b(E)70 b Fd(.)402 b(Quelle)h(est)i(la)f(nature)g(exacte)g(de)g
Fc(D)34 b(E)70 b(F)168 b(B)263 b Fd(?)p 0 TeXcolorgray
-1794 76001 a(4.)p 0 TeXcolorgray 606 w(D)-34 b(\023)-572
b(emon)-34 b(trer)404 b(que)g(les)f(triangles)h Fc(AD)34
b(C)491 b Fd(et)404 b Fc(AD)34 b(B)464 b Fd(son)-34 b(t)406
b(rectangles)d(en)i Fc(D)34 b Fd(.)p 0 TeXcolorgray -1794
77923 a(5.)p 0 TeXcolorgray 606 w(Que)404 b(p)34 b(eut-on)405
b(en)f(d)-34 b(\023)-572 b(eduire)404 b(p)34 b(our)404
b(la)g(droite)g(\()p Fc(AD)34 b Fd(\))202 b(?)p 0 TeXcolorgray
-1794 79846 a(6.)p 0 TeXcolorgray 606 w(Calculer)403
b(l'aire)g(du)i(triangle)f Fc(AB)61 b(C)87 b Fd(.)p 0
TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
